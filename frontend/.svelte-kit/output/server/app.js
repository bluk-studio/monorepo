import { respond } from "@sveltejs/kit/ssr";
import { create_ssr_component, validate_component, missing_component, escape, subscribe, each, add_attribute } from "svelte/internal";
import { setContext, afterUpdate, onMount, getContext, onDestroy, createEventDispatcher } from "svelte";
import FeatherIcons from "feather-icons";
import "svelte/transition";
import { HttpLink, split, InMemoryCache, gql } from "@apollo/client/core/core.cjs.js";
import { getMainDefinition } from "@apollo/client/utilities/utilities.cjs.js";
import { SvelteApolloClient } from "svelte-apollo-client";
import { WebSocketLink } from "@apollo/client/link/ws/ws.cjs.js";
import ws from "websocket";
import { writable } from "svelte/store";
var root_svelte_svelte_type_style_lang = "#svelte-announcer.svelte-1pdgbjn{clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;left:0;overflow:hidden;position:absolute;top:0;white-space:nowrap;width:1px}";
const css$3 = {
  code: "#svelte-announcer.svelte-1pdgbjn{clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;left:0;overflow:hidden;position:absolute;top:0;white-space:nowrap;width:1px}",
  map: `{"version":3,"file":"root.svelte","sources":["root.svelte"],"sourcesContent":["<!-- This file is generated by @sveltejs/kit \u2014 do not edit it! -->\\n<script>\\n\\timport { setContext, afterUpdate, onMount } from 'svelte';\\n\\n\\t// stores\\n\\texport let stores;\\n\\texport let page;\\n\\n\\texport let components;\\n\\texport let props_0 = null;\\n\\texport let props_1 = null;\\n\\texport let props_2 = null;\\n\\texport let props_3 = null;\\n\\texport let props_4 = null;\\n\\texport let props_5 = null;\\n\\n\\tsetContext('__svelte__', stores);\\n\\n\\t$: stores.page.set(page);\\n\\tafterUpdate(stores.page.notify);\\n\\n\\tlet mounted = false;\\n\\tlet navigated = false;\\n\\tlet title = null;\\n\\n\\tonMount(() => {\\n\\t\\tconst unsubscribe = stores.page.subscribe(() => {\\n\\t\\t\\tif (mounted) {\\n\\t\\t\\t\\tnavigated = true;\\n\\t\\t\\t\\ttitle = document.title || 'untitled page';\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\tmounted = true;\\n\\t\\treturn unsubscribe;\\n\\t});\\n<\/script>\\n\\n<svelte:component this={components[0]} {...(props_0 || {})}>\\n\\t{#if components[1]}\\n\\t\\t<svelte:component this={components[1]} {...(props_1 || {})}>\\n\\t\\t\\t{#if components[2]}\\n\\t\\t\\t\\t<svelte:component this={components[2]} {...(props_2 || {})}>\\n\\t\\t\\t\\t\\t{#if components[3]}\\n\\t\\t\\t\\t\\t\\t<svelte:component this={components[3]} {...(props_3 || {})}>\\n\\t\\t\\t\\t\\t\\t\\t{#if components[4]}\\n\\t\\t\\t\\t\\t\\t\\t\\t<svelte:component this={components[4]} {...(props_4 || {})}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{#if components[5]}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<svelte:component this={components[5]} {...(props_5 || {})}/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t\\t\\t\\t</svelte:component>\\n\\t\\t\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t\\t</svelte:component>\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t</svelte:component>\\n\\t\\t\\t{/if}\\n\\t\\t</svelte:component>\\n\\t{/if}\\n</svelte:component>\\n\\n{#if mounted}\\n\\t<div id=\\"svelte-announcer\\" aria-live=\\"assertive\\" aria-atomic=\\"true\\">\\n\\t\\t{#if navigated}\\n\\t\\t\\t{title}\\n\\t\\t{/if}\\n\\t</div>\\n{/if}\\n\\n<style>#svelte-announcer{clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;left:0;overflow:hidden;position:absolute;top:0;white-space:nowrap;width:1px}</style>"],"names":[],"mappings":"AAoEO,gCAAiB,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,kBAAkB,MAAM,GAAG,CAAC,CAAC,UAAU,MAAM,GAAG,CAAC,CAAC,OAAO,GAAG,CAAC,KAAK,CAAC,CAAC,SAAS,MAAM,CAAC,SAAS,QAAQ,CAAC,IAAI,CAAC,CAAC,YAAY,MAAM,CAAC,MAAM,GAAG,CAAC"}`
};
const Root = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { stores } = $$props;
  let { page: page2 } = $$props;
  let { components } = $$props;
  let { props_0 = null } = $$props;
  let { props_1 = null } = $$props;
  let { props_2 = null } = $$props;
  let { props_3 = null } = $$props;
  let { props_4 = null } = $$props;
  let { props_5 = null } = $$props;
  setContext("__svelte__", stores);
  afterUpdate(stores.page.notify);
  let mounted = false;
  let navigated = false;
  let title = null;
  onMount(() => {
    const unsubscribe = stores.page.subscribe(() => {
      if (mounted) {
        navigated = true;
        title = document.title || "untitled page";
      }
    });
    mounted = true;
    return unsubscribe;
  });
  if ($$props.stores === void 0 && $$bindings.stores && stores !== void 0)
    $$bindings.stores(stores);
  if ($$props.page === void 0 && $$bindings.page && page2 !== void 0)
    $$bindings.page(page2);
  if ($$props.components === void 0 && $$bindings.components && components !== void 0)
    $$bindings.components(components);
  if ($$props.props_0 === void 0 && $$bindings.props_0 && props_0 !== void 0)
    $$bindings.props_0(props_0);
  if ($$props.props_1 === void 0 && $$bindings.props_1 && props_1 !== void 0)
    $$bindings.props_1(props_1);
  if ($$props.props_2 === void 0 && $$bindings.props_2 && props_2 !== void 0)
    $$bindings.props_2(props_2);
  if ($$props.props_3 === void 0 && $$bindings.props_3 && props_3 !== void 0)
    $$bindings.props_3(props_3);
  if ($$props.props_4 === void 0 && $$bindings.props_4 && props_4 !== void 0)
    $$bindings.props_4(props_4);
  if ($$props.props_5 === void 0 && $$bindings.props_5 && props_5 !== void 0)
    $$bindings.props_5(props_5);
  $$result.css.add(css$3);
  {
    stores.page.set(page2);
  }
  return `


${validate_component(components[0] || missing_component, "svelte:component").$$render($$result, Object.assign(props_0 || {}), {}, {
    default: () => `${components[1] ? `${validate_component(components[1] || missing_component, "svelte:component").$$render($$result, Object.assign(props_1 || {}), {}, {
      default: () => `${components[2] ? `${validate_component(components[2] || missing_component, "svelte:component").$$render($$result, Object.assign(props_2 || {}), {}, {
        default: () => `${components[3] ? `${validate_component(components[3] || missing_component, "svelte:component").$$render($$result, Object.assign(props_3 || {}), {}, {
          default: () => `${components[4] ? `${validate_component(components[4] || missing_component, "svelte:component").$$render($$result, Object.assign(props_4 || {}), {}, {
            default: () => `${components[5] ? `${validate_component(components[5] || missing_component, "svelte:component").$$render($$result, Object.assign(props_5 || {}), {}, {})}` : ``}`
          })}` : ``}`
        })}` : ``}`
      })}` : ``}`
    })}` : ``}`
  })}

${mounted ? `<div id="${"svelte-announcer"}" aria-live="${"assertive"}" aria-atomic="${"true"}" class="${"svelte-1pdgbjn"}">${navigated ? `${escape(title)}` : ``}</div>` : ``}`;
});
function set_paths(paths) {
}
function set_prerendering(value) {
}
var user_hooks = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module"
});
const template = ({ head, body }) => '<!DOCTYPE html>\n<html lang="en">\n	<head>\n		<meta charset="utf-8" />\n		<link rel="icon" href="/favicon.png" />\n		<meta name="viewport" content="width=device-width, initial-scale=1" />\n		' + head + '\n	</head>\n	<body>\n		<div id="svelte">' + body + "</div>\n	</body>\n</html>";
let options = null;
const default_settings = { paths: { "base": "", "assets": "/." } };
function init(settings = default_settings) {
  set_paths(settings.paths);
  set_prerendering(settings.prerendering || false);
  options = {
    amp: false,
    dev: false,
    entry: {
      file: "/./_app/start-0210123d.js",
      css: ["/./_app/assets/start-0826e215.css", "/./_app/assets/vendor-7fec0a11.css"],
      js: ["/./_app/start-0210123d.js", "/./_app/chunks/vendor-adcc401c.js", "/./_app/chunks/singletons-bb9012b7.js"]
    },
    fetched: void 0,
    floc: false,
    get_component_path: (id) => "/./_app/" + entry_lookup[id],
    get_stack: (error2) => String(error2),
    handle_error: (error2) => {
      console.error(error2.stack);
      error2.stack = options.get_stack(error2);
    },
    hooks: get_hooks(user_hooks),
    hydrate: true,
    initiator: void 0,
    load_component,
    manifest,
    paths: settings.paths,
    read: settings.read,
    root: Root,
    service_worker: null,
    router: true,
    ssr: true,
    target: "#svelte",
    template,
    trailing_slash: "never"
  };
}
const d = decodeURIComponent;
const empty = () => ({});
const manifest = {
  assets: [{ "file": "favicon.png", "size": 1571, "type": "image/png" }, { "file": "logotypes/bluk-studio-black.svg", "size": 66505, "type": "image/svg+xml" }, { "file": "logotypes/odzi-dog-small-black.svg", "size": 1881, "type": "image/svg+xml" }],
  layout: "src/routes/__layout.svelte",
  error: ".svelte-kit/build/components/error.svelte",
  routes: [
    {
      type: "page",
      pattern: /^\/$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/login\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/login/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/app\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/app/__layout.svelte", "src/routes/app/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/app\/selector\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/app/__layout.svelte", "src/routes/app/selector/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/app\/create\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/app/__layout.svelte", "src/routes/app/create/__layout.svelte", "src/routes/app/create/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/app\/create\/information\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/app/__layout.svelte", "src/routes/app/create/__layout.svelte", "src/routes/app/create/information.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/app\/create\/members\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/app/__layout.svelte", "src/routes/app/create/__layout.svelte", "src/routes/app/create/members.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/app\/create\/finish\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/app/__layout.svelte", "src/routes/app/create/__layout.svelte", "src/routes/app/create/finish.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/app\/create\/plan\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/app/__layout.svelte", "src/routes/app/create/__layout.svelte", "src/routes/app/create/plan.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/app\/([^/]+?)\/?$/,
      params: (m) => ({ projectId: d(m[1]) }),
      a: ["src/routes/__layout.svelte", "src/routes/app/__layout.svelte", "src/routes/app/[projectId]/__layout.svelte", "src/routes/app/[projectId]/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/app\/([^/]+?)\/dashboard\/?$/,
      params: (m) => ({ projectId: d(m[1]) }),
      a: ["src/routes/__layout.svelte", "src/routes/app/__layout.svelte", "src/routes/app/[projectId]/__layout.svelte", "src/routes/app/[projectId]/dashboard.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/app\/([^/]+?)\/settings\/?$/,
      params: (m) => ({ projectId: d(m[1]) }),
      a: ["src/routes/__layout.svelte", "src/routes/app/__layout.svelte", "src/routes/app/[projectId]/__layout.svelte", "src/routes/app/[projectId]/settings/__layout.svelte", "src/routes/app/[projectId]/settings/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/app\/([^/]+?)\/settings\/general\/?$/,
      params: (m) => ({ projectId: d(m[1]) }),
      a: ["src/routes/__layout.svelte", "src/routes/app/__layout.svelte", "src/routes/app/[projectId]/__layout.svelte", "src/routes/app/[projectId]/settings/__layout.svelte", "src/routes/app/[projectId]/settings/general.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/app\/([^/]+?)\/settings\/danger\/?$/,
      params: (m) => ({ projectId: d(m[1]) }),
      a: ["src/routes/__layout.svelte", "src/routes/app/__layout.svelte", "src/routes/app/[projectId]/__layout.svelte", "src/routes/app/[projectId]/settings/__layout.svelte", "src/routes/app/[projectId]/settings/danger.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/app\/([^/]+?)\/settings\/tiles\/?$/,
      params: (m) => ({ projectId: d(m[1]) }),
      a: ["src/routes/__layout.svelte", "src/routes/app/__layout.svelte", "src/routes/app/[projectId]/__layout.svelte", "src/routes/app/[projectId]/settings/__layout.svelte", "src/routes/app/[projectId]/settings/tiles.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/app\/([^/]+?)\/editor\/?$/,
      params: (m) => ({ projectId: d(m[1]) }),
      a: ["src/routes/__layout.svelte", "src/routes/app/__layout.svelte", "src/routes/app/[projectId]/__layout.svelte", "src/routes/app/[projectId]/editor/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/app\/([^/]+?)\/editor\/explorer\/?$/,
      params: (m) => ({ projectId: d(m[1]) }),
      a: ["src/routes/__layout.svelte", "src/routes/app/__layout.svelte", "src/routes/app/[projectId]/__layout.svelte", "src/routes/app/[projectId]/editor/explorer.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    }
  ]
};
const get_hooks = (hooks) => ({
  getSession: hooks.getSession || (() => ({})),
  handle: hooks.handle || (({ request, resolve }) => resolve(request)),
  serverFetch: hooks.serverFetch || fetch
});
const module_lookup = {
  "src/routes/__layout.svelte": () => Promise.resolve().then(function() {
    return __layout$4;
  }),
  ".svelte-kit/build/components/error.svelte": () => Promise.resolve().then(function() {
    return error;
  }),
  "src/routes/index.svelte": () => Promise.resolve().then(function() {
    return index$7;
  }),
  "src/routes/login/index.svelte": () => Promise.resolve().then(function() {
    return index$6;
  }),
  "src/routes/app/__layout.svelte": () => Promise.resolve().then(function() {
    return __layout$3;
  }),
  "src/routes/app/index.svelte": () => Promise.resolve().then(function() {
    return index$5;
  }),
  "src/routes/app/selector/index.svelte": () => Promise.resolve().then(function() {
    return index$4;
  }),
  "src/routes/app/create/__layout.svelte": () => Promise.resolve().then(function() {
    return __layout$2;
  }),
  "src/routes/app/create/index.svelte": () => Promise.resolve().then(function() {
    return index$3;
  }),
  "src/routes/app/create/information.svelte": () => Promise.resolve().then(function() {
    return information;
  }),
  "src/routes/app/create/members.svelte": () => Promise.resolve().then(function() {
    return members;
  }),
  "src/routes/app/create/finish.svelte": () => Promise.resolve().then(function() {
    return finish;
  }),
  "src/routes/app/create/plan.svelte": () => Promise.resolve().then(function() {
    return plan;
  }),
  "src/routes/app/[projectId]/__layout.svelte": () => Promise.resolve().then(function() {
    return __layout$1;
  }),
  "src/routes/app/[projectId]/index.svelte": () => Promise.resolve().then(function() {
    return index$2;
  }),
  "src/routes/app/[projectId]/dashboard.svelte": () => Promise.resolve().then(function() {
    return dashboard;
  }),
  "src/routes/app/[projectId]/settings/__layout.svelte": () => Promise.resolve().then(function() {
    return __layout;
  }),
  "src/routes/app/[projectId]/settings/index.svelte": () => Promise.resolve().then(function() {
    return index$1;
  }),
  "src/routes/app/[projectId]/settings/general.svelte": () => Promise.resolve().then(function() {
    return general;
  }),
  "src/routes/app/[projectId]/settings/danger.svelte": () => Promise.resolve().then(function() {
    return danger;
  }),
  "src/routes/app/[projectId]/settings/tiles.svelte": () => Promise.resolve().then(function() {
    return tiles;
  }),
  "src/routes/app/[projectId]/editor/index.svelte": () => Promise.resolve().then(function() {
    return index;
  }),
  "src/routes/app/[projectId]/editor/explorer.svelte": () => Promise.resolve().then(function() {
    return explorer;
  })
};
const metadata_lookup = { "src/routes/__layout.svelte": { "entry": "/./_app/pages/__layout.svelte-784941f1.js", "css": ["/./_app/assets/pages/__layout.svelte-d86d1d7a.css", "/./_app/assets/vendor-7fec0a11.css"], "js": ["/./_app/pages/__layout.svelte-784941f1.js", "/./_app/chunks/vendor-adcc401c.js"], "styles": null }, ".svelte-kit/build/components/error.svelte": { "entry": "/./_app/error.svelte-c8f673b2.js", "css": ["/./_app/assets/vendor-7fec0a11.css"], "js": ["/./_app/error.svelte-c8f673b2.js", "/./_app/chunks/vendor-adcc401c.js"], "styles": null }, "src/routes/index.svelte": { "entry": "/./_app/pages/index.svelte-1999c8a6.js", "css": ["/./_app/assets/RadialSpinner.svelte_svelte&type=style&lang-a3277522.css", "/./_app/assets/vendor-7fec0a11.css"], "js": ["/./_app/pages/index.svelte-1999c8a6.js", "/./_app/chunks/vendor-adcc401c.js", "/./_app/chunks/navigation-20968cc5.js", "/./_app/chunks/singletons-bb9012b7.js", "/./_app/chunks/SimpleIcon-9bf6c4b5.js", "/./_app/chunks/AvailablePages.store-4be7f7f6.js"], "styles": null }, "src/routes/login/index.svelte": { "entry": "/./_app/pages/login/index.svelte-fba1cb5b.js", "css": ["/./_app/assets/vendor-7fec0a11.css"], "js": ["/./_app/pages/login/index.svelte-fba1cb5b.js", "/./_app/chunks/vendor-adcc401c.js", "/./_app/chunks/stores-e9c66975.js", "/./_app/chunks/navigation-20968cc5.js", "/./_app/chunks/singletons-bb9012b7.js", "/./_app/chunks/AvailablePages.store-4be7f7f6.js", "/./_app/chunks/CurrentProfile.store-6e386cb1.js"], "styles": null }, "src/routes/app/__layout.svelte": { "entry": "/./_app/pages/app/__layout.svelte-76f4a136.js", "css": ["/./_app/assets/RadialSpinner.svelte_svelte&type=style&lang-a3277522.css", "/./_app/assets/vendor-7fec0a11.css"], "js": ["/./_app/pages/app/__layout.svelte-76f4a136.js", "/./_app/chunks/vendor-adcc401c.js", "/./_app/chunks/navigation-20968cc5.js", "/./_app/chunks/singletons-bb9012b7.js", "/./_app/chunks/stores-e9c66975.js", "/./_app/chunks/AvailablePages.store-4be7f7f6.js", "/./_app/chunks/CurrentProfile.store-6e386cb1.js", "/./_app/chunks/SimpleIcon-9bf6c4b5.js", "/./_app/chunks/RadialSpinner-87915e8f.js"], "styles": null }, "src/routes/app/index.svelte": { "entry": "/./_app/pages/app/index.svelte-02403512.js", "css": ["/./_app/assets/vendor-7fec0a11.css"], "js": ["/./_app/pages/app/index.svelte-02403512.js", "/./_app/chunks/vendor-adcc401c.js", "/./_app/chunks/navigation-20968cc5.js", "/./_app/chunks/singletons-bb9012b7.js"], "styles": null }, "src/routes/app/selector/index.svelte": { "entry": "/./_app/pages/app/selector/index.svelte-27be8fc6.js", "css": ["/./_app/assets/RadialSpinner.svelte_svelte&type=style&lang-a3277522.css", "/./_app/assets/vendor-7fec0a11.css"], "js": ["/./_app/pages/app/selector/index.svelte-27be8fc6.js", "/./_app/chunks/vendor-adcc401c.js", "/./_app/chunks/SimpleIcon-9bf6c4b5.js", "/./_app/chunks/navigation-20968cc5.js", "/./_app/chunks/singletons-bb9012b7.js", "/./_app/chunks/AvailablePages.store-4be7f7f6.js", "/./_app/chunks/RadialSpinner-87915e8f.js"], "styles": null }, "src/routes/app/create/__layout.svelte": { "entry": "/./_app/pages/app/create/__layout.svelte-1f3fd889.js", "css": ["/./_app/assets/RadialSpinner.svelte_svelte&type=style&lang-a3277522.css", "/./_app/assets/vendor-7fec0a11.css"], "js": ["/./_app/pages/app/create/__layout.svelte-1f3fd889.js", "/./_app/chunks/vendor-adcc401c.js", "/./_app/chunks/stores-e9c66975.js", "/./_app/chunks/navigation-20968cc5.js", "/./_app/chunks/singletons-bb9012b7.js", "/./_app/chunks/AvailablePages.store-4be7f7f6.js", "/./_app/chunks/RadialSpinner-87915e8f.js"], "styles": null }, "src/routes/app/create/index.svelte": { "entry": "/./_app/pages/app/create/index.svelte-0dcfbfa4.js", "css": ["/./_app/assets/vendor-7fec0a11.css"], "js": ["/./_app/pages/app/create/index.svelte-0dcfbfa4.js", "/./_app/chunks/vendor-adcc401c.js"], "styles": null }, "src/routes/app/create/information.svelte": { "entry": "/./_app/pages/app/create/information.svelte-22107c07.js", "css": ["/./_app/assets/RadialSpinner.svelte_svelte&type=style&lang-a3277522.css", "/./_app/assets/vendor-7fec0a11.css"], "js": ["/./_app/pages/app/create/information.svelte-22107c07.js", "/./_app/chunks/vendor-adcc401c.js", "/./_app/chunks/navigation-20968cc5.js", "/./_app/chunks/singletons-bb9012b7.js", "/./_app/chunks/AvailablePages.store-4be7f7f6.js", "/./_app/chunks/CreateProject.store-664e8fcf.js", "/./_app/chunks/NamedProjectProperties.config-8de7d006.js", "/./_app/chunks/SimpleIcon-9bf6c4b5.js"], "styles": null }, "src/routes/app/create/members.svelte": { "entry": "/./_app/pages/app/create/members.svelte-ae8832ff.js", "css": ["/./_app/assets/vendor-7fec0a11.css"], "js": ["/./_app/pages/app/create/members.svelte-ae8832ff.js", "/./_app/chunks/vendor-adcc401c.js"], "styles": null }, "src/routes/app/create/finish.svelte": { "entry": "/./_app/pages/app/create/finish.svelte-77644825.js", "css": ["/./_app/assets/RadialSpinner.svelte_svelte&type=style&lang-a3277522.css", "/./_app/assets/vendor-7fec0a11.css"], "js": ["/./_app/pages/app/create/finish.svelte-77644825.js", "/./_app/chunks/vendor-adcc401c.js", "/./_app/chunks/AvailablePages.store-4be7f7f6.js", "/./_app/chunks/CreateProject.store-664e8fcf.js", "/./_app/chunks/NamedProjectProperties.config-8de7d006.js", "/./_app/chunks/ProjectPlans.config-cf92942c.js", "/./_app/chunks/navigation-20968cc5.js", "/./_app/chunks/singletons-bb9012b7.js", "/./_app/chunks/SimpleIcon-9bf6c4b5.js", "/./_app/chunks/RadialSpinner-87915e8f.js"], "styles": null }, "src/routes/app/create/plan.svelte": { "entry": "/./_app/pages/app/create/plan.svelte-10f3e07b.js", "css": ["/./_app/assets/RadialSpinner.svelte_svelte&type=style&lang-a3277522.css", "/./_app/assets/vendor-7fec0a11.css"], "js": ["/./_app/pages/app/create/plan.svelte-10f3e07b.js", "/./_app/chunks/vendor-adcc401c.js", "/./_app/chunks/SimpleIcon-9bf6c4b5.js", "/./_app/chunks/navigation-20968cc5.js", "/./_app/chunks/singletons-bb9012b7.js", "/./_app/chunks/AvailablePages.store-4be7f7f6.js", "/./_app/chunks/CreateProject.store-664e8fcf.js", "/./_app/chunks/ProjectPlans.config-cf92942c.js"], "styles": null }, "src/routes/app/[projectId]/__layout.svelte": { "entry": "/./_app/pages/app/[projectId]/__layout.svelte-211123e3.js", "css": ["/./_app/assets/RadialSpinner.svelte_svelte&type=style&lang-a3277522.css", "/./_app/assets/vendor-7fec0a11.css"], "js": ["/./_app/pages/app/[projectId]/__layout.svelte-211123e3.js", "/./_app/chunks/vendor-adcc401c.js", "/./_app/chunks/stores-e9c66975.js", "/./_app/chunks/AvailablePages.store-4be7f7f6.js", "/./_app/chunks/CurrentProfile.store-6e386cb1.js", "/./_app/chunks/RadialSpinner-87915e8f.js"], "styles": null }, "src/routes/app/[projectId]/index.svelte": { "entry": "/./_app/pages/app/[projectId]/index.svelte-b32976ae.js", "css": ["/./_app/assets/vendor-7fec0a11.css"], "js": ["/./_app/pages/app/[projectId]/index.svelte-b32976ae.js", "/./_app/chunks/vendor-adcc401c.js", "/./_app/chunks/navigation-20968cc5.js", "/./_app/chunks/singletons-bb9012b7.js", "/./_app/chunks/stores-e9c66975.js"], "styles": null }, "src/routes/app/[projectId]/dashboard.svelte": { "entry": "/./_app/pages/app/[projectId]/dashboard.svelte-42f10cee.js", "css": ["/./_app/assets/RadialSpinner.svelte_svelte&type=style&lang-a3277522.css", "/./_app/assets/vendor-7fec0a11.css"], "js": ["/./_app/pages/app/[projectId]/dashboard.svelte-42f10cee.js", "/./_app/chunks/vendor-adcc401c.js", "/./_app/chunks/AvailablePages.store-4be7f7f6.js", "/./_app/chunks/SimpleIcon-9bf6c4b5.js", "/./_app/chunks/stores-e9c66975.js", "/./_app/chunks/navigation-20968cc5.js", "/./_app/chunks/singletons-bb9012b7.js", "/./_app/chunks/ControlsTile-627badc9.js", "/./_app/chunks/RadialSpinner-87915e8f.js"], "styles": null }, "src/routes/app/[projectId]/settings/__layout.svelte": { "entry": "/./_app/pages/app/[projectId]/settings/__layout.svelte-1a84ca06.js", "css": ["/./_app/assets/RadialSpinner.svelte_svelte&type=style&lang-a3277522.css", "/./_app/assets/vendor-7fec0a11.css"], "js": ["/./_app/pages/app/[projectId]/settings/__layout.svelte-1a84ca06.js", "/./_app/chunks/vendor-adcc401c.js", "/./_app/chunks/stores-e9c66975.js", "/./_app/chunks/navigation-20968cc5.js", "/./_app/chunks/singletons-bb9012b7.js", "/./_app/chunks/SimpleIcon-9bf6c4b5.js", "/./_app/chunks/AvailablePages.store-4be7f7f6.js"], "styles": null }, "src/routes/app/[projectId]/settings/index.svelte": { "entry": "/./_app/pages/app/[projectId]/settings/index.svelte-f6cdcceb.js", "css": ["/./_app/assets/vendor-7fec0a11.css"], "js": ["/./_app/pages/app/[projectId]/settings/index.svelte-f6cdcceb.js", "/./_app/chunks/vendor-adcc401c.js", "/./_app/chunks/stores-e9c66975.js", "/./_app/chunks/navigation-20968cc5.js", "/./_app/chunks/singletons-bb9012b7.js"], "styles": null }, "src/routes/app/[projectId]/settings/general.svelte": { "entry": "/./_app/pages/app/[projectId]/settings/general.svelte-b2d0bf0c.js", "css": ["/./_app/assets/RadialSpinner.svelte_svelte&type=style&lang-a3277522.css", "/./_app/assets/vendor-7fec0a11.css"], "js": ["/./_app/pages/app/[projectId]/settings/general.svelte-b2d0bf0c.js", "/./_app/chunks/vendor-adcc401c.js", "/./_app/chunks/AvailablePages.store-4be7f7f6.js", "/./_app/chunks/UniversalSettingCard-2a03f517.js", "/./_app/chunks/SimpleIcon-9bf6c4b5.js", "/./_app/chunks/RadialSpinner-87915e8f.js"], "styles": null }, "src/routes/app/[projectId]/settings/danger.svelte": { "entry": "/./_app/pages/app/[projectId]/settings/danger.svelte-81d77122.js", "css": ["/./_app/assets/RadialSpinner.svelte_svelte&type=style&lang-a3277522.css", "/./_app/assets/vendor-7fec0a11.css"], "js": ["/./_app/pages/app/[projectId]/settings/danger.svelte-81d77122.js", "/./_app/chunks/vendor-adcc401c.js", "/./_app/chunks/SimpleIcon-9bf6c4b5.js", "/./_app/chunks/navigation-20968cc5.js", "/./_app/chunks/singletons-bb9012b7.js", "/./_app/chunks/AvailablePages.store-4be7f7f6.js", "/./_app/chunks/RadialSpinner-87915e8f.js"], "styles": null }, "src/routes/app/[projectId]/settings/tiles.svelte": { "entry": "/./_app/pages/app/[projectId]/settings/tiles.svelte-10e1e2d3.js", "css": ["/./_app/assets/RadialSpinner.svelte_svelte&type=style&lang-a3277522.css", "/./_app/assets/vendor-7fec0a11.css"], "js": ["/./_app/pages/app/[projectId]/settings/tiles.svelte-10e1e2d3.js", "/./_app/chunks/vendor-adcc401c.js", "/./_app/chunks/SimpleIcon-9bf6c4b5.js", "/./_app/chunks/AvailablePages.store-4be7f7f6.js", "/./_app/chunks/ControlsTile-627badc9.js", "/./_app/chunks/navigation-20968cc5.js", "/./_app/chunks/singletons-bb9012b7.js", "/./_app/chunks/stores-e9c66975.js", "/./_app/chunks/RadialSpinner-87915e8f.js", "/./_app/chunks/UniversalSettingCard-2a03f517.js"], "styles": null }, "src/routes/app/[projectId]/editor/index.svelte": { "entry": "/./_app/pages/app/[projectId]/editor/index.svelte-9f6cfd9e.js", "css": ["/./_app/assets/vendor-7fec0a11.css"], "js": ["/./_app/pages/app/[projectId]/editor/index.svelte-9f6cfd9e.js", "/./_app/chunks/vendor-adcc401c.js", "/./_app/chunks/navigation-20968cc5.js", "/./_app/chunks/singletons-bb9012b7.js", "/./_app/chunks/stores-e9c66975.js"], "styles": null }, "src/routes/app/[projectId]/editor/explorer.svelte": { "entry": "/./_app/pages/app/[projectId]/editor/explorer.svelte-b6724b8d.js", "css": ["/./_app/assets/vendor-7fec0a11.css"], "js": ["/./_app/pages/app/[projectId]/editor/explorer.svelte-b6724b8d.js", "/./_app/chunks/vendor-adcc401c.js"], "styles": null } };
async function load_component(file) {
  return {
    module: await module_lookup[file](),
    ...metadata_lookup[file]
  };
}
function render(request, {
  prerender
} = {}) {
  const host = request.headers["host"];
  return respond({ ...request, host }, options, { prerender });
}
var app = "/*! tailwindcss v2.2.4 | MIT License | https://tailwindcss.com*/\n/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */html{-webkit-text-size-adjust:100%;line-height:1.15;-moz-tab-size:4;-o-tab-size:4;tab-size:4}body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji;margin:0}hr{color:inherit;height:0}abbr[title]{-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-color:inherit;text-indent:0}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}::-moz-focus-inner{border-style:none;padding:0}:-moz-focusring{outline:1px dotted ButtonText}:-moz-ui-invalid{box-shadow:none}legend{padding:0}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}button{background-color:transparent;background-image:none}fieldset,ol,ul{margin:0;padding:0}ol,ul{list-style:none}html{font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5}body{font-family:inherit;line-height:inherit}*,:after,:before{border:0 solid;box-sizing:border-box}hr{border-top-width:1px}img{border-style:solid}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{color:#9ca3af;opacity:1}input:-ms-input-placeholder,textarea:-ms-input-placeholder{color:#9ca3af;opacity:1}input::placeholder,textarea::placeholder{color:#9ca3af;opacity:1}[role=button],button{cursor:pointer}table{border-collapse:collapse}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}button,input,optgroup,select,textarea{color:inherit;line-height:inherit;padding:0}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}*,:after,:before{--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-transform:translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));--tw-border-opacity:1;--tw-shadow:0 0 #0000;--tw-ring-inset:var(--tw-empty,/*!*/ /*!*/);--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-blur:var(--tw-empty,/*!*/ /*!*/);--tw-brightness:var(--tw-empty,/*!*/ /*!*/);--tw-contrast:var(--tw-empty,/*!*/ /*!*/);--tw-grayscale:var(--tw-empty,/*!*/ /*!*/);--tw-hue-rotate:var(--tw-empty,/*!*/ /*!*/);--tw-invert:var(--tw-empty,/*!*/ /*!*/);--tw-saturate:var(--tw-empty,/*!*/ /*!*/);--tw-sepia:var(--tw-empty,/*!*/ /*!*/);--tw-drop-shadow:var(--tw-empty,/*!*/ /*!*/);--tw-filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);--tw-backdrop-blur:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-brightness:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-contrast:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-grayscale:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-hue-rotate:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-invert:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-opacity:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-saturate:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-sepia:var(--tw-empty,/*!*/ /*!*/);--tw-backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);border-color:rgba(229,231,235,var(--tw-border-opacity))}.absolute{position:absolute}.relative{position:relative}.inset-0{bottom:0;top:0}.inset-0,.inset-x-0{left:0;right:0}.bottom-0{bottom:0}.top-0{top:0}.z-10{z-index:10}.z-50{z-index:50}.z-20{z-index:20}.m-2{margin:.5rem}.mx-4{margin-left:1rem;margin-right:1rem}.mx-3{margin-left:.75rem;margin-right:.75rem}.mx-2{margin-left:.5rem;margin-right:.5rem}.mx-1{margin-left:.25rem;margin-right:.25rem}.my-4{margin-bottom:1rem;margin-top:1rem}.my-6{margin-bottom:1.5rem;margin-top:1.5rem}.my-2{margin-bottom:.5rem;margin-top:.5rem}.my-1\\.5{margin-bottom:.375rem;margin-top:.375rem}.my-1{margin-bottom:.25rem;margin-top:.25rem}.my-8{margin-bottom:2rem;margin-top:2rem}.my-3{margin-bottom:.75rem;margin-top:.75rem}.mr-2{margin-right:.5rem}.ml-1\\.5{margin-left:.375rem}.ml-1{margin-left:.25rem}.ml-6{margin-left:1.5rem}.mt-4{margin-top:1rem}.mr-1\\.5{margin-right:.375rem}.mr-1{margin-right:.25rem}.ml-2{margin-left:.5rem}.ml-3{margin-left:.75rem}.mt-2{margin-top:.5rem}.ml-0\\.5{margin-left:.125rem}.ml-0{margin-left:0}.ml-4{margin-left:1rem}.mr-3{margin-right:.75rem}.mt-1{margin-top:.25rem}.mt-8{margin-top:2rem}.mb-4{margin-bottom:1rem}.mt-6{margin-top:1.5rem}.mt-0\\.5{margin-top:.125rem}.mt-0{margin-top:0}.mb-1\\.5{margin-bottom:.375rem}.mb-1{margin-bottom:.25rem}.mr-0\\.5{margin-right:.125rem}.mr-0{margin-right:0}.mb-8{margin-bottom:2rem}.mt-1\\.5{margin-top:.375rem}.mb-2{margin-bottom:.5rem}.flex{display:flex}.grid{display:grid}.h-screen{height:100vh}.h-6{height:1.5rem}.h-4{height:1rem}.h-8{height:2rem}.h-7{height:1.75rem}.h-5{height:1.25rem}.h-full{height:100%}.h-10{height:2.5rem}.h-3{height:.75rem}.h-auto{height:auto}.h-1\\/2{height:50%}.h-2{height:.5rem}.w-full{width:100%}.w-6{width:1.5rem}.w-4{width:1rem}.w-8{width:2rem}.w-7{width:1.75rem}.w-5{width:1.25rem}.w-1\\/3{width:33.333333%}.w-10{width:2.5rem}.w-1\\/2{width:50%}.w-2\\/3{width:66.666667%}.w-3{width:.75rem}.w-1\\/6{width:16.666667%}.w-48{width:12rem}.w-auto{width:auto}.w-1\\/4{width:25%}.w-3\\/4{width:75%}.cursor-pointer{cursor:pointer}.cursor-not-allowed{cursor:not-allowed}.flex-col{flex-direction:column}.flex-wrap{flex-wrap:wrap}.items-start{align-items:flex-start}.items-center{align-items:center}.items-stretch{align-items:stretch}.justify-start{justify-content:flex-start}.justify-end{justify-content:flex-end}.justify-center{justify-content:center}.justify-between{justify-content:space-between}.overflow-hidden{overflow:hidden}.overflow-x-auto{overflow-x:auto}.overflow-y-auto{overflow-y:auto}.overflow-x-hidden{overflow-x:hidden}.rounded-sm{border-radius:.125rem}.rounded-full{border-radius:9999px}.rounded-md{border-radius:.375rem}.rounded-l-md{border-bottom-left-radius:.375rem;border-top-left-radius:.375rem}.rounded-r-md{border-bottom-right-radius:.375rem;border-top-right-radius:.375rem}.border-2{border-width:2px}.border{border-width:1px}.border-4{border-width:4px}.border-b-4{border-bottom-width:4px}.border-b-2{border-bottom-width:2px}.border-t-2{border-top-width:2px}.border-dotted{border-style:dotted}.border-yellow-300{--tw-border-opacity:1;border-color:rgba(252,211,77,var(--tw-border-opacity))}.border-black{--tw-border-opacity:1;border-color:rgba(0,0,0,var(--tw-border-opacity))}.border-yellow-400{--tw-border-opacity:1;border-color:rgba(251,191,36,var(--tw-border-opacity))}.border-gray-200{--tw-border-opacity:1;border-color:rgba(229,231,235,var(--tw-border-opacity))}.border-gray-300{--tw-border-opacity:1;border-color:rgba(209,213,219,var(--tw-border-opacity))}.border-indigo-500{--tw-border-opacity:1;border-color:rgba(99,102,241,var(--tw-border-opacity))}.border-opacity-80{--tw-border-opacity:0.8}.bg-gray-100{--tw-bg-opacity:1;background-color:rgba(243,244,246,var(--tw-bg-opacity))}.bg-gray-200{--tw-bg-opacity:1;background-color:rgba(229,231,235,var(--tw-bg-opacity))}.bg-black{--tw-bg-opacity:1;background-color:rgba(0,0,0,var(--tw-bg-opacity))}.bg-red-500{--tw-bg-opacity:1;background-color:rgba(239,68,68,var(--tw-bg-opacity))}.bg-white{--tw-bg-opacity:1;background-color:rgba(255,255,255,var(--tw-bg-opacity))}.bg-green-500{--tw-bg-opacity:1;background-color:rgba(16,185,129,var(--tw-bg-opacity))}.bg-gray-300{--tw-bg-opacity:1;background-color:rgba(209,213,219,var(--tw-bg-opacity))}.bg-yellow-500{--tw-bg-opacity:1;background-color:rgba(245,158,11,var(--tw-bg-opacity))}.bg-yellow-400{--tw-bg-opacity:1;background-color:rgba(251,191,36,var(--tw-bg-opacity))}.bg-indigo-400{--tw-bg-opacity:1;background-color:rgba(129,140,248,var(--tw-bg-opacity))}.bg-indigo-500{--tw-bg-opacity:1;background-color:rgba(99,102,241,var(--tw-bg-opacity))}.bg-opacity-40{--tw-bg-opacity:0.4}.bg-gradient-to-tr{background-image:linear-gradient(to top right,var(--tw-gradient-stops))}.from-gray-900{--tw-gradient-from:#111827;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,rgba(17,24,39,0))}.to-black{--tw-gradient-to:#000}.p-4{padding:1rem}.p-3{padding:.75rem}.p-2{padding:.5rem}.p-1\\.5{padding:.375rem}.p-1{padding:.25rem}.p-0\\.5{padding:.125rem}.p-0{padding:0}.px-6{padding-left:1.5rem;padding-right:1.5rem}.py-4{padding-bottom:1rem;padding-top:1rem}.py-1\\.5{padding-bottom:.375rem;padding-top:.375rem}.py-1{padding-bottom:.25rem;padding-top:.25rem}.py-2{padding-bottom:.5rem;padding-top:.5rem}.px-4{padding-left:1rem;padding-right:1rem}.px-2{padding-left:.5rem;padding-right:.5rem}.px-3{padding-left:.75rem;padding-right:.75rem}.py-12{padding-bottom:3rem;padding-top:3rem}.py-6{padding-bottom:1.5rem;padding-top:1.5rem}.py-16{padding-bottom:4rem;padding-top:4rem}.px-1\\.5{padding-left:.375rem;padding-right:.375rem}.py-0\\.5{padding-bottom:.125rem;padding-top:.125rem}.px-1{padding-left:.25rem;padding-right:.25rem}.py-0{padding-bottom:0;padding-top:0}.pt-16{padding-top:4rem}.pb-8{padding-bottom:2rem}.pt-3{padding-top:.75rem}.pb-2{padding-bottom:.5rem}.pt-4{padding-top:1rem}.text-left{text-align:left}.text-center{text-align:center}.text-6xl{font-size:3.75rem;line-height:1}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-sm{font-size:.875rem;line-height:1.25rem}.text-xs{font-size:.75rem;line-height:1rem}.text-2xl{font-size:1.5rem;line-height:2rem}.text-base{font-size:1rem;line-height:1.5rem}.font-medium{font-weight:500}.font-bold{font-weight:700}.text-black{--tw-text-opacity:1;color:rgba(0,0,0,var(--tw-text-opacity))}.text-white{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity))}.opacity-90{opacity:.9}.opacity-80{opacity:.8}.opacity-40{opacity:.4}.shadow-sm{--tw-shadow:0 1px 2px 0 rgba(0,0,0,0.05);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.filter{filter:var(--tw-filter)}.ease-in-out{transition-timing-function:cubic-bezier(.4,0,.2,1)}@media (min-width:768px){.md\\:w-2\\/4{width:50%}.md\\:px-12{padding-left:3rem;padding-right:3rem}}";
const _layout$4 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${slots.default ? slots.default({}) : ``}`;
});
var __layout$4 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _layout$4
});
function load({ error: error2, status }) {
  return { props: { error: error2, status } };
}
const Error$1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { status } = $$props;
  let { error: error2 } = $$props;
  if ($$props.status === void 0 && $$bindings.status && status !== void 0)
    $$bindings.status(status);
  if ($$props.error === void 0 && $$bindings.error && error2 !== void 0)
    $$bindings.error(error2);
  return `<h1>${escape(status)}</h1>

<p>${escape(error2.message)}</p>


${error2.stack ? `<pre>${escape(error2.stack)}</pre>` : ``}`;
});
var error = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Error$1,
  load
});
function guard(name) {
  return () => {
    throw new Error(`Cannot call ${name}(...) on the server`);
  };
}
const goto = guard("goto");
const SimpleIcon = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { name } = $$props;
  let { attrs } = $$props;
  if ($$props.name === void 0 && $$bindings.name && name !== void 0)
    $$bindings.name(name);
  if ($$props.attrs === void 0 && $$bindings.attrs && attrs !== void 0)
    $$bindings.attrs(attrs);
  return `<!-- HTML_TAG_START -->${FeatherIcons.icons[name].toSvg(attrs)}<!-- HTML_TAG_END -->`;
});
const getStores = () => {
  const stores = getContext("__svelte__");
  return {
    page: {
      subscribe: stores.page.subscribe
    },
    navigating: {
      subscribe: stores.navigating.subscribe
    },
    get preloading() {
      console.error("stores.preloading is deprecated; use stores.navigating instead");
      return {
        subscribe: stores.navigating.subscribe
      };
    },
    session: stores.session
  };
};
const page = {
  subscribe(fn) {
    const store = getStores().page;
    return store.subscribe(fn);
  }
};
const httpLink = new HttpLink({
  uri: "http://localhost:3001/graphql"
});
const wsLink = new WebSocketLink({
  uri: "ws://localhost:3001/graphql",
  options: {
    reconnect: true
  },
  webSocketImpl: ws
});
const splitLink = split(({ query }) => {
  const definition = getMainDefinition(query);
  return definition.kind === "OperationDefinition" && definition.operation === "subscription";
}, wsLink, httpLink);
const client = SvelteApolloClient({
  link: splitLink,
  credentials: "include",
  cache: new InMemoryCache()
});
const LoginMutation = gql`
  mutation Login($token: String!) {
    login(token: $token) {
      _id
      email
      username
    }
  }
`;
const FetchMe = gql`
  query me {
    me {
      _id
      email
      token
    }
  }
`;
const ProfileProjects$1 = gql`
  query ProfileProjects {
    ProfileProjects {
      _id
      name
      description
    }
  }
`;
const ProjectById = gql`
  query Project($projectId: String!) {
    Project(projectId: $projectId) {
      _id
      name
      description
    }
  }
`;
const CreateProject = gql`
  mutation CreateProject($input: CreateProjectInput!) {
    CreateProject(input: $input) {
      _id
    }
  }
`;
const BaseWidget = `
type
enabled
x
y
height
width
`;
const AllDashboardWidgets = `
widgets {
  __typename
  ...on ControlsWidget {
    ${BaseWidget}
  }
  ...on ConsoleWidget {
    ${BaseWidget}
  }
  ...on PlayersWidget {
    ${BaseWidget}
  }
  ...on LogsWidget {
    ${BaseWidget}
  }
}
`;
gql`
  mutation UpdateConsoleWidget(
    $dashboardId: String!
    $input: ConsoleWidgetInput!
  ) {
    UpdateConsoleWidget(
      dashboardId: $dashboardId
      input: $input
    ) {
      _id
      name
    }
  }
`;
gql`
  mutation UpdateControlsWidget(
    $dashboardId: String!
    $input: ControlsWidgetInput!
  ) {
    UpdateControlsWidget(
      dashboardId: $dashboardId
      input: $input
    ) {
      _id
      name
    }
  }
`;
gql`
  mutation UpdateLogsWidget(
    $dashboardId: String!
    $input: LogsWidgetInput!
  ) {
    UpdateLogsWidget(
      dashboardId: $dashboardId
      input: $input
    ) {
      _id
      name
    }
  }
`;
gql`
  mutation UpdatePlayersWidget(
    $dashboardId: String!
    $input: PlayersWidgetInput!
  ) {
    UpdatePlayersWidget(
      dashboardId: $dashboardId
      input: $input
    ) {
      _id
      name
    }
  }
`;
const CurrentDashboardConfig = gql`
  query CurrentDashboardConfig($projectId: String!) {
    CurrentProjectDashboard(projectId: $projectId) {
      _id
      name
      ${AllDashboardWidgets}
    }
  }
`;
gql`
  query ProjectDashboardByProfile($profileId: String!) {
    ProjectDashboardByProfile(projectId: $projectId) {
      _id
      name
      ${AllDashboardWidgets}
    }
  }
`;
const UpdateProjectDashboard = gql`
  mutation UpdateProjectDashboard(
    $dashboardId: String!
    $input: UpdateDashboardConfigInput!
  ) {
    UpdateProjectDashboard(
      dashboardId: $dashboardId
      input: $input
    ) {
      _id
      name
    }
  }
`;
const OnlineMode = gql`
  query OnlineMode($projectId: String!) {
    Project(projectId: $projectId) {
      settings {
        server {
          onlineMode
        }
      }
    }
  }
`;
const Whitelist = gql`
  query Whitelist($projectId: String!) {
    Project(projectId: $projectId) {
      settings {
        server {
          whitelist
        }
      }
    }
  }
`;
const FetchServerAddress = gql`
  query FetchServerAddress($projectId: String!) {
    Project(projectId: $projectId) {
      settings {
        server {
          address
        }
      }
    }
  }
`;
const UpdateServerAddress = gql`
  mutation UpdateServerAddress($projectId: String!, $value: String!) {
    UpdateServerSettings(
      projectId: $projectId,
      input: {
        address: $value
      }
    ) {
      server {
        address
      }
    }
  }
`;
const UpdateOnlineMode = gql`
  mutation UpdateOnlineMode(
    $projectId: String!
    $value: Boolean!
  ) {
    UpdateServerSettings(
      projectId: $projectId,
      input: {
        onlineMode: $value
      }
    ) {
      server {
        onlineMode
      }
    }
  }
`;
const UpdateWhitelist = gql`
  mutation UpdateWhitelist(
    $projectId: String!
    $value: Boolean!
  ) {
    UpdateServerSettings(
      projectId: $projectId,
      input: {
        whitelist: $value
      }
    ) {
      server {
        whitelist
      }
    }
  }
`;
const TogglePlayersWidget = gql`
  mutation TogglePlayersWidget(
    $dashboardId: String!
    $value: Boolean!
  ) {
    UpdatePlayersWidget(
      dashboardId: $dashboardId,
      input: {
        enabled: $value
      }
    ) {
      widgets {
        __typename
        ...on PlayersWidget {
          enabled
        }
      }
    }
  }
`;
const ToggleControlsWidget = gql`
  mutation ToggleControlsWidget(
    $dashboardId: String!
    $value: Boolean!
  ) {
    UpdateControlsWidget(
      dashboardId: $dashboardId,
      input: {
        enabled: $value
      }
    ) {
      widgets {
        __typename
        ...on ControlsWidget {
          enabled
        }
      }
    }
  }
`;
const ToggleConsoleWidget = gql`
  mutation ToggleConsoleWidget(
    $dashboardId: String!
    $value: Boolean!
  ) {
    UpdateConsoleWidget(
      dashboardId: $dashboardId,
      input: {
        enabled: $value
      }
    ) {
      widgets {
        __typename
        ...on ConsoleWidget {
          enabled
        }
      }
    }
  }
`;
const ToggleLogsWidget = gql`
  mutation ToggleLogsWidget(
    $dashboardId: String!
    $value: Boolean!
  ) {
    UpdateLogsWidget(
      dashboardId: $dashboardId,
      input: {
        enabled: $value
      }
    ) {
      widgets {
        __typename
        ...on LogsWidget {
          enabled
        }
      }
    }
  }
`;
gql`
  mutation DeleteProject($projectId: String!) {
    DeleteProject(projectId: $projectId) {
      _id
    }
  }
`;
const SubscribeToWorkerState = gql`
  subscription CurrentWorkerState(
    $projectId: String!
    $token: String!  
  ) {
    CurrentWorkerState(
      projectId: $projectId
      token: $token
    ) {
      state
    }
  }
`;
function _initialize$6() {
  const defaultStore = {
    loggedIn: false
  };
  const { subscribe: subscribe2, update } = writable(defaultStore);
  function updateProfile(profile) {
    update((object) => {
      if (profile == null) {
        object.loggedIn = false;
        object.profile = null;
      } else {
        object.loggedIn = true;
        object.profile = profile;
      }
      return object;
    });
  }
  return {
    subscribe: subscribe2,
    async authorize(token) {
      const response = await client.mutate(LoginMutation, { variables: { token } });
      if (response.errors) {
        console.error("graphql authorize mutation error", response.errors);
      } else {
        updateProfile(response.data.login);
      }
    },
    async fetchMe() {
      return new Promise((resolve, reject) => {
        client.query(FetchMe).subscribe((response) => {
          var _a;
          if (response.loading)
            return;
          if (response.error) {
            console.error("graphql fetchme query error", response.error);
            reject({ error: true });
          } else {
            updateProfile((_a = response.data) == null ? void 0 : _a.me);
            resolve(response);
          }
        });
      });
    }
  };
}
const CurrentProfile = _initialize$6();
function _initialize$5() {
  const defaultStore = {
    loaded: false,
    list: []
  };
  const { subscribe: subscribe2, update } = writable(defaultStore);
  function updateList(projects) {
    update((object) => {
      object.loaded = true;
      object.list = projects;
      return object;
    });
  }
  return {
    subscribe: subscribe2,
    clear() {
      update((object) => {
        object.loaded = false;
        object.list = [];
        return object;
      });
    },
    async fetch() {
      return new Promise((resolve, reject) => {
        client.query(ProfileProjects$1).subscribe((response) => {
          var _a;
          if (response.loading)
            return;
          if (response.error) {
            console.error("graphql profileprojects query error", response.error);
            reject({ error: true });
          } else {
            updateList((_a = response.data) == null ? void 0 : _a.ProfileProjects);
            resolve(response);
          }
        });
        client.query(ProfileProjects$1).refetch();
      });
    }
  };
}
const ProfileProjects = _initialize$5();
function _initialize$4() {
  const defaultStore = {};
  const { subscribe: subscribe2, update } = writable(defaultStore);
  return {
    subscribe: subscribe2,
    async create() {
      const project = await new Promise((resolve) => {
        subscribe2((object) => {
          resolve(object);
        });
      });
      const response = await client.mutate(CreateProject, {
        variables: {
          input: {
            name: project.name,
            description: project.description
          }
        }
      });
      ProfileProjects.fetch();
      return response.data.CreateProject;
    },
    setPlan(plan2) {
      update((object) => {
        object.plan = plan2;
        return object;
      });
    },
    setName(name) {
      update((object) => {
        object.name = name;
        return object;
      });
    },
    setDescription(description) {
      update((object) => {
        object.description = description;
        return object;
      });
    }
  };
}
const CreateProjectStore = _initialize$4();
function _initialize$3() {
  const defaultStore = {
    loaded: false,
    project: {},
    state: {}
  };
  const { subscribe: subscribe2, update } = writable(defaultStore);
  function updateProject(project) {
    update((object) => {
      object.loaded = true;
      object.project = project;
      return object;
    });
  }
  return {
    subscribe: subscribe2,
    async clear() {
      updateProject({});
    },
    async fetch(projectId) {
      return new Promise((resolve, reject) => {
        client.query(ProjectById, { variables: { projectId } }).subscribe((response) => {
          var _a;
          if (response.loading)
            return;
          if (response.error) {
            console.error("graphql project query error", response.error);
            reject({ error: true });
          } else {
            updateProject((_a = response.data) == null ? void 0 : _a.Project);
            resolve(response);
          }
        });
      });
    }
  };
}
const CurrentProject = _initialize$3();
function _initialize$2() {
  const defaultStore = {
    widgets: []
  };
  const { subscribe: subscribe2, update } = writable(defaultStore);
  function updateStore(store) {
    update((object) => {
      var _a;
      object._id = store._id, object.projectId = (_a = store.projectId) != null ? _a : object.projectId;
      object.widgets = store.widgets;
      return object;
    });
  }
  function fetchDashboard(projectId) {
    return new Promise((resolve, reject) => {
      const query = client.query(CurrentDashboardConfig, { variables: { projectId } });
      query.refetch();
      query.subscribe((response) => {
        if (response.loading)
          return;
        if (response.error) {
          console.error("graphql project query error", response.error);
          reject({ error: true });
        } else {
          updateStore({ ...response.data.CurrentProjectDashboard, projectId });
          resolve(response);
        }
      });
    });
  }
  return {
    subscribe: subscribe2,
    async refetch() {
      console.log("refetch");
      const dashboard2 = await new Promise((resolve) => {
        subscribe2((object) => {
          resolve(object);
        });
      });
      console.log(dashboard2);
      return await fetchDashboard(String(dashboard2.projectId));
    },
    async fetch(projectId) {
      console.log("fetch dashboard");
      return await fetchDashboard(projectId);
    },
    async updateLayout(dashboardId, widgets) {
      const response = await client.mutate(UpdateProjectDashboard, {
        variables: {
          dashboardId,
          input: {
            widgets: widgets.map((widget) => {
              return {
                type: widget.type,
                x: widget.x,
                y: widget.y,
                width: widget.width,
                height: widget.height
              };
            })
          }
        }
      });
      return response.data.UpdateProjectDashboard;
    }
  };
}
const ProjectDashboard = _initialize$2();
const Categories = [
  {
    id: "basic",
    title: "\u0411\u0430\u0437\u043E\u0432\u043E\u0435",
    description: "\u0411\u0430\u043D\u0430\u043B\u044C\u043D\u044B\u0435 \u0438 \u043E\u0431\u044B\u0447\u043D\u044B\u0435 \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u044B"
  },
  {
    id: "project",
    title: "\u041F\u0440\u043E\u0435\u043A\u0442",
    description: "\u0412\u0441\u0435 \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u044B, \u0441\u0432\u044F\u0437\u0430\u043D\u043D\u044B\u0435 \u0441 \u0442\u0435\u043A\u0443\u0449\u0438\u043C \u043F\u0440\u043E\u0435\u043A\u0442\u043E\u043C"
  }
];
const Pages = [
  {
    url: "/app/selector",
    regex: /\/app\/selector/,
    checkName: "projectSelector",
    category: "basic",
    icon: "list",
    iconColor: "#818cf8",
    title: "\u0412\u044B\u0431\u0440\u0430\u0442\u044C \u0441\u0435\u0440\u0432\u0435\u0440",
    description: "\u041F\u0435\u0440\u0435\u0439\u0442\u0438 \u043A \u0441\u043F\u0438\u0441\u043A\u0443 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044E\u0449\u0438\u0445 \u0441\u0435\u0440\u0432\u0435\u0440\u043E\u0432"
  },
  {
    url: "/app/create",
    regex: /\/app\/create\/[\s\S]+/,
    checkName: "createProject",
    category: "basic",
    icon: "layers",
    title: "\u0421\u043E\u0437\u0434\u0430\u0442\u044C \u0441\u0435\u0440\u0432\u0435\u0440",
    description: "\u0421\u043E\u0437\u0434\u0430\u0442\u044C \u043D\u043E\u0432\u044B\u0439 \u0441\u0435\u0440\u0432\u0435\u0440"
  },
  {
    url: "/app/${ $page.params.projectId }/dashboard",
    regex: /\/app\/[\s\S]{24}\/dashboard/,
    checkName: "currentProject",
    category: "project",
    icon: "home",
    iconColor: "#34d399",
    title: "\u0413\u043B\u0430\u0432\u043D\u0430\u044F",
    description: "\u0412\u0441\u044F \u0441\u0430\u043C\u0430\u044F \u0432\u0430\u0436\u043D\u0430\u044F \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F \u043E \u0442\u0435\u043A\u0443\u0449\u0435\u043C \u0441\u0435\u0440\u0432\u0435\u0440\u0435"
  },
  {
    url: "/app/${ $page.params.projectId }/editor",
    regex: /\/app\/[\s\S]{24}\/editor\/[\s\S]+/,
    checkName: "currentProject",
    category: "project",
    icon: "code",
    iconColor: "#f472b6",
    title: "\u0420\u0435\u0434\u0430\u043A\u0442\u043E\u0440",
    description: "\u0421\u043E\u0437\u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u0438 \u0440\u0435\u0434\u0430\u043A\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0441\u0432\u043E\u0438 \u043F\u043B\u0430\u0433\u0438\u043D\u044B"
  },
  {
    url: "/app/${ $page.params.projectId }/worlds",
    regex: /\/app\/[\s\S]{24}\/worlds/,
    checkName: "currentProject",
    category: "project",
    icon: "archive",
    title: "\u041C\u0438\u0440\u044B",
    description: "\u041D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438 \u0432\u0441\u0435\u0445 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u043D\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435 \u043C\u0438\u0440\u043E\u0432"
  },
  {
    url: "/app/${ $page.params.projectId }/settings",
    regex: /\/app\/[\s\S]{24}\/settings\/[\s\S]+/,
    checkName: "currentProject",
    category: "project",
    icon: "settings",
    title: "\u041D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438",
    description: "\u0413\u043B\u043E\u0431\u0430\u043B\u044C\u043D\u044B\u0435 \u043D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438 \u0432\u0441\u0435\u0433\u043E \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0438 \u043F\u0440\u043E\u0435\u043A\u0442\u0430"
  }
];
const CreateProjectPages = [
  {
    id: "plan",
    title: "\u0421\u043E\u0437\u0434\u0430\u0442\u044C \u0441\u0435\u0440\u0432\u0435\u0440",
    description: "1. \u0414\u043B\u044F \u0442\u043E\u0433\u043E, \u0447\u0442\u043E \u0431\u044B \u043D\u0430\u0447\u0430\u0442\u044C \u0441\u043E\u0437\u0434\u0430\u043D\u0438\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430, \u043F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0432\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u043F\u043B\u0430\u043D."
  },
  {
    id: "information",
    title: "\u0418\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F \u043E \u0441\u0435\u0440\u0432\u0435\u0440\u0435",
    description: "2. \u0417\u0430\u043F\u043E\u043B\u043D\u0438\u0442\u0435 \u0431\u0430\u0437\u043E\u0432\u0443\u044E \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044E \u043E \u0434\u0430\u043D\u043D\u043E\u043C \u0441\u0435\u0440\u0432\u0435\u0440\u0435."
  },
  {
    id: "finish",
    title: "\u0418\u0442\u043E\u0433",
    description: "4. \u041F\u0440\u043E\u0432\u0435\u0440\u044C\u0442\u0435 \u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u043E\u0441\u0442\u044C \u0438 \u0437\u0430\u043F\u043E\u043B\u043D\u0435\u043D\u043D\u043E\u0441\u0442\u044C \u0432\u0441\u0435\u0445 \u0434\u0430\u043D\u043D\u044B\u0445."
  }
];
const NamedProjectProperties = [
  {
    id: "plan",
    pageId: "plan",
    required: true,
    icon: "box",
    title: "\u041F\u043B\u0430\u043D",
    description: "\u041F\u043B\u0430\u043D, \u043A\u043E\u0442\u043E\u0440\u044B\u0439 \u043E\u043F\u0440\u0435\u0434\u0435\u043B\u044F\u0435\u0442 \u0441\u043A\u043E\u043B\u044C\u043A\u043E \u0440\u0435\u0441\u0443\u0440\u0441\u043E\u0432 \u0438 \u0437\u0430 \u043A\u0430\u043A\u0438\u0435 \u0434\u0435\u043D\u044C\u0433\u0438 \u0432\u044B \u043F\u043E\u043B\u0443\u0447\u0430\u0435\u0442\u0435."
  },
  {
    id: "name",
    pageId: "information",
    required: true,
    icon: "feather",
    title: "\u041D\u0430\u0437\u0432\u0430\u043D\u0438\u0435",
    description: "\u0423\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u043E\u0435 \u043D\u0430\u0437\u0432\u0430\u043D\u0438\u0435 \u0432\u0430\u0448\u0435\u0433\u043E \u0441\u0435\u0440\u0432\u0435\u0440\u0430."
  },
  {
    id: "description",
    pageId: "information",
    required: false,
    icon: "align-center",
    title: "\u041E\u043F\u0438\u0441\u0430\u043D\u0438\u0435",
    description: "\u041D\u0435\u043E\u0431\u044F\u0437\u0430\u0442\u0435\u043B\u044C\u043D\u043E\u0435 \u043E\u043F\u0438\u0441\u0430\u043D\u0438\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430."
  }
];
const ProjectPlans = [
  {
    id: "developer",
    price: 0,
    icon: "code",
    color: "#fbbf24",
    title: "\u041F\u043B\u0430\u043D \u0440\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u0447\u0438\u043A\u0430",
    description: "\u041D\u0435\u043E\u0433\u0440\u0430\u043D\u0438\u0447\u0435\u043D\u043D\u044B\u0439 \u043F\u043B\u0430\u043D, \u0432 \u043A\u043E\u0442\u043E\u0440\u043E\u043C \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0440\u0430\u0431\u043E\u0442\u0430\u044E\u0442 <span class='border-b-2 border-yellow-400'>24/7</span>, <span class='border-b-2 border-yellow-400'>\u0431\u0435\u0437\u043B\u0438\u043C\u0438\u0442\u043D\u043E\u0435 \u043A\u043E\u043B-\u0432\u043E \u043F\u043B\u0430\u0433\u0438\u043D\u043E\u0432</span>, <span class='border-b-2 border-yellow-400'>\u0438\u0433\u0440\u043E\u043A\u043E\u0432</span> \u0438 \u043C\u043D\u043E\u0433\u043E\u0435-\u043C\u043D\u043E\u0433\u043E\u0435 \u0434\u0440\u0443\u0433\u043E\u0435."
  }
];
const SettingsCategories = [
  {
    id: "general",
    title: "\u0411\u0430\u0437\u043E\u0432\u043E\u0435",
    icon: "globe"
  },
  {
    id: "tiles",
    title: "\u0422\u0430\u0439\u043B\u044B",
    icon: "grid"
  },
  {
    id: "danger",
    title: "\u041E\u043F\u0430\u0441\u043D\u0430\u044F \u0437\u043E\u043D\u0430",
    icon: "alert-triangle"
  }
];
var ESettingCardType;
(function(ESettingCardType2) {
  ESettingCardType2["TOGGLER"] = "TOGGLER";
  ESettingCardType2["INPUT"] = "INPUT";
})(ESettingCardType || (ESettingCardType = {}));
async function toggleOnlineMode(input) {
  return new Promise((resolve) => {
    CurrentProject.subscribe(async ({ project }) => {
      const response = await client.mutate(UpdateOnlineMode, {
        variables: {
          projectId: project._id,
          value: !input.enabled
        }
      });
      resolve(response.data.UpdateServerSettings.server.onlineMode);
    });
  });
}
function toggleWhitelist(input) {
  return new Promise((resolve) => {
    CurrentProject.subscribe(async ({ project }) => {
      const response = await client.mutate(UpdateWhitelist, {
        variables: {
          projectId: project._id,
          value: !input.enabled
        }
      });
      resolve(response.data.UpdateServerSettings.server.whitelist);
    });
  });
}
async function updatePublicAddress(input) {
  return new Promise((resolve) => {
    CurrentProject.subscribe(async ({ project }) => {
      const response = await client.mutate(UpdateServerAddress, {
        variables: {
          projectId: project._id,
          value: input.value
        }
      });
      resolve(response.data.UpdateServerSettings.server.address);
    });
  });
}
async function getOnlineMode() {
  return new Promise((resolve) => {
    CurrentProject.subscribe(({ project }) => {
      const projectId = project._id;
      if (!projectId)
        return;
      client.query(OnlineMode, { variables: { projectId } }).subscribe((response) => {
        var _a, _b, _c;
        if (response.loading)
          return;
        if (!response.error) {
          resolve((_c = (_b = (_a = response.data) == null ? void 0 : _a.Project) == null ? void 0 : _b.settings.server.onlineMode) != null ? _c : false);
        } else {
          console.log("error while making request");
        }
      });
    });
  });
}
async function getWhitelist() {
  return new Promise((resolve) => {
    CurrentProject.subscribe(({ project }) => {
      const projectId = project._id;
      if (!projectId)
        return;
      client.query(Whitelist, { variables: { projectId } }).subscribe((response) => {
        var _a, _b, _c;
        if (response.loading)
          return;
        if (!response.error) {
          resolve((_c = (_b = (_a = response.data) == null ? void 0 : _a.Project) == null ? void 0 : _b.settings.server.whitelist) != null ? _c : false);
        } else {
          console.log("error while making request");
        }
      });
    });
  });
}
async function getPublicAddress() {
  return new Promise((resolve) => {
    CurrentProject.subscribe(({ project }) => {
      const projectId = project._id;
      if (!projectId)
        return;
      client.query(FetchServerAddress, { variables: { projectId } }).subscribe((response) => {
        var _a, _b, _c;
        if (response.loading)
          return;
        if (!response.error) {
          resolve((_c = (_b = (_a = response.data) == null ? void 0 : _a.Project) == null ? void 0 : _b.settings.server.address) != null ? _c : "");
        } else {
          console.log("error while making request");
        }
      });
    });
  });
}
function EnableWidget(type) {
  let query;
  switch (type) {
    case "PLAYERS":
      query = TogglePlayersWidget;
      break;
    case "CONSOLE":
      query = ToggleConsoleWidget;
      break;
    case "CONTROLS":
      query = ToggleControlsWidget;
      break;
    case "LOGS":
      query = ToggleLogsWidget;
      break;
  }
  if (query == null)
    return;
  return function(input) {
    return new Promise(async (resolve) => {
      const dashboardId = await new Promise((resolve2) => {
        const unsubscribe = ProjectDashboard.subscribe(async ({ _id }) => {
          resolve2(_id);
        });
        unsubscribe();
      });
      await client.mutate(query, {
        variables: {
          dashboardId,
          value: !input.enabled
        }
      });
      ProjectDashboard.refetch();
      resolve(!input.enabled);
    });
  };
}
function isWidgetEnabled(type) {
  return function() {
    return new Promise((resolve) => {
      ProjectDashboard.subscribe((dashboard2) => {
        var _a, _b;
        const widgets = (_a = dashboard2.widgets) != null ? _a : [];
        const widget = widgets.find((x) => x.type == type);
        if (widget == null)
          return;
        resolve((_b = widget.enabled) != null ? _b : false);
      });
    });
  };
}
const PlayersWidgetGetters = {
  isEnabled: isWidgetEnabled("PLAYERS")
};
const PlayersWidgetUpdaters = {
  enable: EnableWidget("PLAYERS")
};
const ControlsWidgetGetters = {
  isEnabled: isWidgetEnabled("CONTROLS")
};
const ControlsWidgetUpdaters = {
  enable: EnableWidget("CONTROLS")
};
const ConsoleWidgetGetters = {
  isEnabled: isWidgetEnabled("CONSOLE")
};
const ConsoleWidgetUpdaters = {
  enable: EnableWidget("CONSOLE")
};
const LogsWidgetGetters = {
  isEnabled: isWidgetEnabled("LOGS")
};
const LogsWidgetUpdaters = {
  enable: EnableWidget("LOGS")
};
const GeneralSettings = [
  {
    type: ESettingCardType.TOGGLER,
    title: "\u041E\u043D\u043B\u0430\u0439\u043D-\u0440\u0435\u0436\u0438\u043C",
    description: "Lorem ipsum dolor sit, amet consectetur adipisicing elit. Labore, a.",
    icon: "rss",
    color: "#fbbf24",
    updater: toggleOnlineMode,
    getter: getOnlineMode
  },
  {
    type: ESettingCardType.TOGGLER,
    title: "\u0412\u0430\u0439\u0442\u043B\u0438\u0441\u0442",
    description: "Lorem ipsum dolor sit, amet consectetur adipisicing elit. Labore, a.",
    icon: "shield",
    color: "#3b82f6",
    updater: toggleWhitelist,
    getter: getWhitelist
  },
  {
    type: ESettingCardType.INPUT,
    title: "\u041F\u0443\u0431\u043B\u0438\u0447\u043D\u044B\u0439 \u0430\u0434\u0440\u0435\u0441\u0441",
    description: "Lorem ipsum dolor sit, amet consectetur adipisicing elit. Labore, a.",
    icon: "globe",
    color: "#10b981",
    textPlaceholder: "\u041F\u0443\u0431\u043B\u0438\u0447\u043D\u044B\u0439 \u0430\u0434\u0440\u0435\u0441\u0441",
    placeholder: {
      side: "right",
      text: ".bluk.studio"
    },
    footerText: '\u041F\u0440\u0438\u043D\u0438\u043C\u0430\u044E\u0442\u0441\u044F \u0442\u043E\u043B\u044C\u043A\u043E <span class="bg-gray-300 rounded-full px-1.5 py-0.5">\u0410\u043D\u0433\u043B\u0438\u0439\u0441\u043A\u0438\u0435 \u0431\u0443\u043A\u0432\u044B</span> \u043C\u0430\u043A\u0441\u0438\u043C\u0443\u043C <span class="bg-gray-300 rounded-full px-1.5 py-0.5">20 \u0431\u0443\u043A\u0432</span>',
    updater: updatePublicAddress,
    getter: getPublicAddress
  }
];
const ConsoleWidgetSettings = [
  {
    type: "TOGGLER",
    title: "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0430\u0442\u044C",
    description: "Lorem ipsum dolor sit, amet consectetur adipisicing elit. Labore, a.",
    icon: "check",
    color: "#10b981",
    size: "1/2",
    getter: ConsoleWidgetGetters.isEnabled,
    updater: ConsoleWidgetUpdaters.enable
  }
];
const ControlsWidgetSettings = [
  {
    type: "TOGGLER",
    title: "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0430\u0442\u044C",
    description: "Lorem ipsum dolor sit, amet consectetur adipisicing elit. Labore, a.",
    icon: "check",
    color: "#10b981",
    size: "1/2",
    getter: ControlsWidgetGetters.isEnabled,
    updater: ControlsWidgetUpdaters.enable
  }
];
const LogsWidgetSettings = [
  {
    type: "TOGGLER",
    title: "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0430\u0442\u044C",
    description: "Lorem ipsum dolor sit, amet consectetur adipisicing elit. Labore, a.",
    icon: "check",
    color: "#10b981",
    size: "1/2",
    getter: LogsWidgetGetters.isEnabled,
    updater: LogsWidgetUpdaters.enable
  }
];
const PlayersWidgetSettings = [
  {
    type: "TOGGLER",
    title: "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0430\u0442\u044C",
    description: "Lorem ipsum dolor sit, amet consectetur adipisicing elit. Labore, a.",
    icon: "check",
    color: "#10b981",
    size: "1/2",
    getter: PlayersWidgetGetters.isEnabled,
    updater: PlayersWidgetUpdaters.enable
  }
];
const InfoFooterButtons = [
  {
    url: "editor",
    title: "\u0420\u0435\u0434\u0430\u043A\u0442\u043E\u0440",
    icon: "code",
    isGhost: false
  },
  {
    url: "settings",
    title: "\u041D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438",
    icon: "settings",
    isGhost: true
  },
  {
    click: () => {
      document.dispatchEvent(new Event("openPageExplorer"));
    },
    title: "\u0411\u043E\u043B\u044C\u0448\u0435",
    icon: "external-link",
    isGhost: true
  }
];
function _initialize$1() {
  const defaultStore = {
    list: []
  };
  const { subscribe: subscribe2, update } = writable(defaultStore);
  let projects = [];
  let project = {
    current: {},
    state: {}
  };
  ProfileProjects.subscribe((object) => {
    var _a;
    projects = (_a = object == null ? void 0 : object.list) != null ? _a : [];
    updateAvailability();
  });
  CurrentProject.subscribe((object) => {
    if (object.loaded) {
      project.current = object.project;
      updateAvailability();
    }
  });
  function updateAvailability() {
    let available = [];
    Pages.forEach((page2) => {
      var _a;
      if (page2.checkName == "projectSelector") {
        if ((projects == null ? void 0 : projects.length) > 0) {
          available.push(page2);
        }
      } else if (page2.checkName == "createProject") {
        available.push(page2);
      } else if (page2.checkName == "currentProject") {
        if (((_a = project == null ? void 0 : project.current) == null ? void 0 : _a._id) != null) {
          available.push(page2);
        }
      }
    });
    updateList(available);
  }
  function updateList(pages) {
    update((object) => {
      object.list = pages;
      return object;
    });
  }
  return {
    subscribe: subscribe2
  };
}
const AvailablePages = _initialize$1();
function _initialize() {
  const defaultStore = {
    loaded: false,
    state: "DEAD"
  };
  const { subscribe: subscribe2, update } = writable(defaultStore);
  function updateStore(store) {
    update((object) => {
      object.loaded = true;
      return {
        ...object,
        ...store
      };
    });
  }
  return {
    subscribe: subscribe2,
    async fetch(projectId) {
      const profileToken = await new Promise((resolve) => {
        CurrentProfile.subscribe((store) => {
          if (store.loggedIn) {
            resolve(store.profile.token);
          }
        });
      });
      const subscription = client.subscribe(SubscribeToWorkerState, {
        variables: {
          projectId,
          token: profileToken
        }
      });
      subscription.subscribe((response) => {
        console.log("response:");
        console.log(response);
        if (response.loading)
          return;
        updateStore(response.data.CurrentWorkerState);
      });
    }
  };
}
const CurrentWorkerState = _initialize();
const CurrentPageBadge = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  var _a;
  let currentPage;
  let $page, $$unsubscribe_page;
  let $AvailablePages, $$unsubscribe_AvailablePages;
  $$unsubscribe_page = subscribe(page, (value) => $page = value);
  $$unsubscribe_AvailablePages = subscribe(AvailablePages, (value) => $AvailablePages = value);
  let popoverVisible = false;
  function popoverSwitch() {
    document.removeEventListener("click", onClickListener);
    popoverVisible = popoverVisible ? false : true;
    setTimeout(() => {
      if (popoverVisible) {
        document.addEventListener("click", onClickListener);
      }
    }, 500);
  }
  page.subscribe(() => {
    if (popoverVisible)
      popoverVisible = false;
  });
  onMount(() => {
    document.addEventListener("openPageExplorer", popoverSwitch);
    currentCategoryId = currentPage === null || currentPage === void 0 ? void 0 : currentPage.category;
  });
  onDestroy(() => {
    document.removeEventListener("openPageExplorer", popoverSwitch);
  });
  function onClickListener(event) {
    if (!popoverVisible)
      return;
    const popoverElement = document.getElementById("currentPageBadge-popover");
    const buttonElement = document.getElementById("currentPageBadge-button");
    let targetElement = event.target;
    do {
      if (targetElement == popoverElement || targetElement == buttonElement) {
        return;
      }
      targetElement = targetElement.parentNode;
    } while (targetElement);
    popoverVisible = false;
  }
  let currentCategoryId;
  Categories.filter((x) => x.id == currentCategoryId)[0];
  currentPage = Pages.filter((x) => {
    return x.regex.test($page.path);
  })[0];
  $$unsubscribe_page();
  $$unsubscribe_AvailablePages();
  return `
<div class="${"mx-4 relative"}"><button id="${"currentPageBadge-button"}" class="${"px-4 w-48 py-2 border-2 border-black flex items-center justify-center"}"><p class="${"text-sm text-black mr-2"}">${escape((_a = currentPage == null ? void 0 : currentPage.title) != null ? _a : "\u041D\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043D\u043E")}</p>

    ${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: popoverVisible ? "chevron-up" : "chevron-down",
    attrs: {
      class: "w-4 h-4 text-black",
      "stroke-width": "2.5"
    }
  }, {}, {})}</button>

  
  ${popoverVisible ? `<div id="${"currentPageBadge-popover"}" style="${"width: " + escape($AvailablePages.list.length >= 6 ? "360%" : "180%") + "; margin-top: -2px;"}" class="${"z-20 overflow-x-auto w-full absolute bg-gray-100 border-2 border-black pt-3 pb-2"}">
      ${$AvailablePages.list.length < 6 ? `<div class="${"w-full px-2"}"><h1 class="${"text-md text-black font-medium"}">\u0421\u0442\u0440\u0430\u043D\u0438\u0446\u044B</h1>
          <p class="${"text-xs text-black opacity-80"}">\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0430\u0435\u043C \u0442\u043E\u043B\u044C\u043A\u043E \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0435 \u0432\u0430\u043C \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u044B</p></div>` : ``}

      ${$AvailablePages.list.length >= 6 ? `
        <div class="${"w-full flex items-start justify-center"}">${each(Categories, (category) => `${$AvailablePages.list.filter((x) => x.category == category.id).length > 0 ? `
              <div class="${"w-auto relative"}">
                <div class="${"w-full px-2"}"><h1 class="${"text-md text-black font-medium"}">${escape(category.title)}</h1>
                  <p class="${"text-xs text-black opacity-80"}">${escape(category.description)}</p></div>

                
                <div class="${"mt-4"}">${each($AvailablePages.list.filter((x) => x.category == category.id), (availablePage) => {
    var _a2;
    return `<div class="${"w-full border-t-2 border-gray-300 p-2"}">
                      <div class="${"flex items-start justify-between"}"><div class="${"flex items-start w-2/3"}">${availablePage.icon ? `
                            <div style="${"background-color: " + escape((_a2 = availablePage.iconColor) != null ? _a2 : "#fbbf24")}" class="${"p-1.5 mr-2 mt-0.5 rounded-full"}">${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
      name: availablePage.icon,
      attrs: {
        class: "w-4 h-4 text-white",
        "stroke-width": "2.5"
      }
    }, {}, {})}
                            </div>` : ``}
        
                          <div><h1 class="${"text-md text-black font-medium"}">${escape(availablePage.title)}</h1>
                            
                            ${availablePage.description ? `<p class="${"text-xs text-black opacity-80"}"><!-- HTML_TAG_START -->${availablePage.description}<!-- HTML_TAG_END --></p>` : ``}
                          </div></div>
                      
                        
                        ${availablePage == currentPage ? `<button class="${"px-2 py-1 bg-black flex items-center justify-center mt-0.5"}">${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
      name: "check",
      attrs: {
        class: "w-4 h-4 text-white",
        "stroke-width": "2.5"
      }
    }, {}, {})}
                          
                            <p class="${"text-xs text-white ml-0.5"}">\u0412\u044B \u0442\u0443\u0442</p>
                          </button>` : `<button class="${"px-2 py-1 border-2 border-black flex items-center justify-center mt-0.5"}"><p class="${"text-xs text-black mr-0.5"}">\u041F\u0435\u0440\u0435\u0439\u0442\u0438</p>
        
                            ${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
      name: "chevron-right",
      attrs: {
        class: "w-4 h-4 text-black",
        "stroke-width": "2.5"
      }
    }, {}, {})}
                          </button>`}</div>
                    </div>`;
  })}</div>
              </div>` : ``}`)}</div>` : `<div class="${"mt-4"}">
          ${each($AvailablePages.list, (availablePage) => {
    var _a2;
    return `<div class="${"w-full border-t-2 border-gray-300 p-2"}">
              <div class="${"flex items-start justify-between"}"><div class="${"flex items-start w-2/3"}">${availablePage.icon ? `
                    <div style="${"background-color: " + escape((_a2 = availablePage.iconColor) != null ? _a2 : "#fbbf24")}" class="${"p-1.5 mr-2 mt-0.5 rounded-full"}">${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
      name: availablePage.icon,
      attrs: {
        class: "w-4 h-4 text-white",
        "stroke-width": "2.5"
      }
    }, {}, {})}
                    </div>` : ``}

                  <div><h1 class="${"text-md text-black font-medium"}">${escape(availablePage.title)}</h1>
                    
                    ${availablePage.description ? `<p class="${"text-xs text-black opacity-80"}"><!-- HTML_TAG_START -->${availablePage.description}<!-- HTML_TAG_END --></p>` : ``}
                  </div></div>
              
                
                ${availablePage == currentPage ? `<button class="${"px-2 py-1 bg-black flex items-center justify-center mt-0.5"}">${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
      name: "check",
      attrs: {
        class: "w-4 h-4 text-white",
        "stroke-width": "2.5"
      }
    }, {}, {})}
                  
                    <p class="${"text-xs text-white ml-0.5"}">\u0412\u044B \u0442\u0443\u0442</p>
                  </button>` : `<button class="${"px-2 py-1 border-2 border-black flex items-center justify-center mt-0.5"}"><p class="${"text-xs text-black mr-0.5"}">\u041F\u0435\u0440\u0435\u0439\u0442\u0438</p>

                    ${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
      name: "chevron-right",
      attrs: {
        class: "w-4 h-4 text-black",
        "stroke-width": "2.5"
      }
    }, {}, {})}
                  </button>`}</div>
            </div>`;
  })}</div>`}</div>` : ``}</div>`;
});
const ApplicationHeader = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  var _a, _b, _c, _d, _e, _f;
  let $CurrentProject, $$unsubscribe_CurrentProject;
  let $CurrentProfile, $$unsubscribe_CurrentProfile;
  $$unsubscribe_CurrentProject = subscribe(CurrentProject, (value) => $CurrentProject = value);
  $$unsubscribe_CurrentProfile = subscribe(CurrentProfile, (value) => $CurrentProfile = value);
  $$unsubscribe_CurrentProject();
  $$unsubscribe_CurrentProfile();
  return `
<header class="${"absolute z-10 inset-x-0 top-0 w-full flex items-center justify-between bg-gray-100 py-2 px-6"}">
  <div class="${"flex items-stretch"}">
    <div class="${"flex items-center"}"><img src="${"https://res.cloudinary.com/lococovu-cdn/image/upload/v1636810372/bluk-studio-black.svg"}" alt="${"bluk.studio white logotype"}" class="${"w-8 h-8"}"></div>

    ${$CurrentProject.loaded && ((_a = $CurrentProject.project) == null ? void 0 : _a._id) != null ? `
      <button class="${"ml-6 px-4 py-2 bg-black rounded-sm flex items-center justify-center"}">
        <h1 class="${"text-white text-sm mr-2"}">${escape((_b = $CurrentProject.project) == null ? void 0 : _b.name)}</h1>

        
        <div class="${"flex items-center"}">${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: "chevron-down",
    attrs: {
      class: "w-4 h-4 text-white",
      "stroke-width": "2.5"
    }
  }, {}, {})}</div></button>` : ``}

    
    ${validate_component(CurrentPageBadge, "CurrentPageBadge").$$render($$result, {}, {}, {})}

    ${$CurrentProject.loaded && ((_c = $CurrentProject.project) == null ? void 0 : _c._id) != null ? `
      <button class="${"px-4 py-2 border-2 border-black flex items-center"}">${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: "command",
    attrs: { class: "w-4 h-4", "stroke-width": "2.5" }
  }, {}, {})}</button>` : ``}</div>

  
  <div class="${"flex items-stretch"}">
    <button class="${"px-4 py-2 bg-black rounded-sm flex items-center justify-center"}">
      <div class="${"w-7 h-7 bg-red-500 rounded-full"}"></div>

      
      <div class="${"mx-3 text-left"}"><h1 class="${"text-xs text-white font-medium"}">${escape((_e = (_d = $CurrentProfile == null ? void 0 : $CurrentProfile.profile) == null ? void 0 : _d.username) != null ? _e : "Default profile")}</h1>
        <p class="${"text-xs text-white opacity-80"}">${escape((_f = $CurrentProfile == null ? void 0 : $CurrentProfile.profile) == null ? void 0 : _f.email)}</p></div>

      
      <div class="${"flex items-center"}">${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: "chevron-down",
    attrs: {
      class: "w-5 h-5 text-white",
      "stroke-width": "2.5"
    }
  }, {}, {})}</div></button></div></header>`;
});
const EditorHeader = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<header></header>`;
});
const PlayersTile = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$unsubscribe_page;
  $$unsubscribe_page = subscribe(page, (value) => value);
  $$unsubscribe_page();
  return `
<div class="${"w-full border-b-2 border-gray-300 py-2 px-4 flex items-center justify-between"}"><h1 class="${"text-md text-black font-medium"}">\u0418\u0433\u0440\u043E\u043A\u0438</h1>

  <div class="${"flex items-center"}">
    
    
    <button>${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: "settings",
    attrs: { class: "w-4 h-4", "stroke-width": "2.5" }
  }, {}, {})}</button></div></div>


<div class="${"mt-4 px-4"}">
  <div class="${"my-3 flex items-center justify-between"}">
    <div class="${"flex items-center"}"><img src="${"https://crafatar.com/avatars/1b42ff62-b4cb-4b8e-8fbd-efd24e70ced2"}" alt="${""}" class="${"w-8 h-8 rounded-sm"}">
      
      <div class="${"ml-2"}"><h1 class="${"text-base text-black font-medium"}">SniperFox213</h1>
        
        
        <div class="${"flex items-stretch"}">
          <div class="${"mr-1 rounded-full px-2 py-0.5 bg-indigo-400"}"><p class="${"text-xs text-white"}">\u041E\u043F\u0435\u0440\u0430\u0442\u043E\u0440</p></div>

          
          <div class="${"rounded-full px-2 py-0.5 bg-yellow-400"}"><p class="${"text-xs text-white"}">\u0418\u0433\u0440\u0430\u0435\u0442 4 \u0447\u0430\u0441\u043E\u0432</p></div></div></div></div>

    
    <div class="${"flex items-center"}">${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: "x-circle",
    attrs: {
      class: "w-5 h-5 text-black mr-2",
      "stroke-width": "2.5"
    }
  }, {}, {})}
      ${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: "settings",
    attrs: {
      class: "w-5 h-5 text-black ml-2 ",
      "stroke-width": "2.5"
    }
  }, {}, {})}</div></div>

  
  <div class="${"my-3 flex items-center justify-between"}">
    <div class="${"flex items-center"}"><img src="${"https://crafatar.com/avatars/1b42ff62-b4cb-4b8e-8fbd-efd24e70ced2"}" alt="${""}" class="${"w-8 h-8 rounded-sm"}">
      
      <div class="${"ml-2"}"><h1 class="${"text-base text-black font-medium"}">Lol</h1>
        
        
        <div class="${"flex items-stretch"}">
          <div class="${"rounded-full px-2 py-0.5 bg-yellow-400"}"><p class="${"text-xs text-white"}">\u0418\u0433\u0440\u0430\u0435\u0442 6 \u0447\u0430\u0441\u043E\u0432</p></div></div></div></div>

    
    <div class="${"flex items-center"}">${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: "x-circle",
    attrs: {
      class: "w-5 h-5 text-black mr-2",
      "stroke-width": "2.5"
    }
  }, {}, {})}
      ${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: "settings",
    attrs: {
      class: "w-5 h-5 text-black ml-2 ",
      "stroke-width": "2.5"
    }
  }, {}, {})}</div></div></div>`;
});
const ConsoleTile = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `
<div class="${"w-full border-b-2 border-gray-300 py-2 px-4 flex items-center justify-between"}"><h1 class="${"text-md text-black font-medium"}">\u041A\u043E\u043D\u0441\u043E\u043B\u044C</h1>

  <div class="${"flex items-center"}"><button class="${"px-3 py-1 border-2 border-black"}"><p class="${"text-xs text-black"}">\u041D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438</p></button></div></div>


<div class="${"mt-4 px-4"}"></div>`;
});
const ControlsTile = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `
<div class="${"w-full border-b-2 border-gray-300 py-2 px-4 flex items-center justify-between"}"><h1 class="${"text-md text-black font-medium"}">\u0423\u043F\u0440\u0430\u0432\u043B\u0435\u043D\u0438\u0435</h1>

  <div class="${"flex items-center"}"><button class="${"px-3 py-1 border-2 border-black"}"><p class="${"text-xs text-black"}">\u041D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438</p></button></div></div>


<div class="${"mt-4 px-4"}">
  
  </div>`;
});
const LogsTile = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `
<div class="${"w-full border-b-2 border-gray-300 py-2 px-4 flex items-center justify-between"}"><h1 class="${"text-md text-black font-medium"}">\u041B\u043E\u0433\u0438</h1>

  <div class="${"flex items-center"}"><button class="${"px-3 py-1 border-2 border-black"}"><p class="${"text-xs text-black"}">\u041D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438</p></button></div></div>


<div class="${"mt-4 px-4"}"></div>`;
});
function throttle(func, timeFrame) {
  let lastTime = 0;
  return function(...args) {
    let now = new Date();
    if (now - lastTime >= timeFrame) {
      func(...args);
      lastTime = now;
    }
  };
}
function getRowsCount$1(items, cols) {
  const getItemsMaxHeight = items.map((val) => {
    const item = val[cols];
    return (item && item.y) + (item && item.h) || 0;
  });
  return Math.max(...getItemsMaxHeight, 1);
}
const getColumn = (containerWidth, columns) => {
  const sortColumns = columns.slice().sort((a, b) => a[0] - b[0]);
  const breakpoint = sortColumns.find((value) => {
    const [width] = value;
    return containerWidth <= width;
  });
  if (breakpoint) {
    return breakpoint[1];
  } else {
    return sortColumns[sortColumns.length - 1][1];
  }
};
function getContainerHeight(items, yPerPx, cols) {
  return getRowsCount$1(items, cols) * yPerPx;
}
const makeMatrix$1 = (rows, cols) => Array.from(Array(rows), () => new Array(cols));
function makeMatrixFromItems$1(items, _row, _col) {
  let matrix = makeMatrix$1(_row, _col);
  for (var i = 0; i < items.length; i++) {
    const value = items[i][_col];
    if (value) {
      const { x, y, h } = value;
      const id = items[i].id;
      const w = Math.min(_col, value.w);
      for (var j = y; j < y + h; j++) {
        const row = matrix[j];
        for (var k = x; k < x + w; k++) {
          row[k] = { ...value, id };
        }
      }
    }
  }
  return matrix;
}
function findFreeSpaceForItem$1(matrix, item) {
  const cols = matrix[0].length;
  const w = Math.min(cols, item.w);
  let xNtime = cols - w;
  let getMatrixRows = matrix.length;
  for (var i = 0; i < getMatrixRows; i++) {
    const row = matrix[i];
    for (var j = 0; j < xNtime + 1; j++) {
      const sliceA = row.slice(j, j + w);
      const empty2 = sliceA.every((val) => val === void 0);
      if (empty2) {
        const isEmpty = matrix.slice(i, i + item.h).every((a) => a.slice(j, j + w).every((n) => n === void 0));
        if (isEmpty) {
          return { y: i, x: j };
        }
      }
    }
  }
  return {
    y: getMatrixRows,
    x: 0
  };
}
function getUndefinedItems(items, col, breakpoints) {
  return items.map((value) => {
    if (!value[col]) {
      return value.id;
    }
  }).filter(Boolean);
}
function getClosestColumn(items, item, col, breakpoints) {
  return breakpoints.map(([_, column]) => item[column] && column).filter(Boolean).reduce(function(acc, value) {
    const isLower = Math.abs(value - col) < Math.abs(acc - col);
    return isLower ? value : acc;
  });
}
function specifyUndefinedColumns(items, col, breakpoints) {
  let matrix = makeMatrixFromItems$1(items, getRowsCount$1(items, col), col);
  const getUndefinedElements = getUndefinedItems(items, col);
  let newItems = [...items];
  getUndefinedElements.forEach((elementId) => {
    const getElement = items.find((item) => item.id === elementId);
    const closestColumn = getClosestColumn(items, getElement, col, breakpoints);
    const position = findFreeSpaceForItem$1(matrix, getElement[closestColumn]);
    const newItem = {
      ...getElement,
      [col]: {
        ...getElement[closestColumn],
        ...position
      }
    };
    newItems = newItems.map((value) => value.id === elementId ? newItem : value);
    matrix = makeMatrixFromItems$1(newItems, getRowsCount$1(newItems, col), col);
  });
  return newItems;
}
var index_svelte_svelte_type_style_lang$1 = '.svlt-grid-item.svelte-fwv2px{backface-visibility:hidden;-webkit-backface-visibility:hidden;position:absolute;touch-action:none;will-change:auto}.svlt-grid-resizer.svelte-fwv2px{bottom:0;cursor:se-resize;height:20px;position:absolute;right:0;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:20px}.svlt-grid-resizer.svelte-fwv2px:after{border-bottom:2px solid rgba(0,0,0,.4);border-right:2px solid rgba(0,0,0,.4);bottom:3px;content:"";height:5px;position:absolute;right:3px;width:5px}.svlt-grid-active.svelte-fwv2px{backface-visibility:hidden;-webkit-backface-visibility:hidden;-moz-backface-visibility:hidden;-o-backface-visibility:hidden;-ms-backface-visibility:hidden;cursor:-webkit-grabbing;cursor:grabbing;opacity:.5;position:fixed;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:3}.shadow-active.svelte-fwv2px{transition:all .2s;z-index:2}.svlt-grid-shadow.svelte-fwv2px{backface-visibility:hidden;-webkit-backface-visibility:hidden;background:red;background:pink;position:absolute;will-change:transform}';
const css$2 = {
  code: '.svlt-grid-item.svelte-fwv2px{backface-visibility:hidden;-webkit-backface-visibility:hidden;position:absolute;touch-action:none;will-change:auto}.svlt-grid-resizer.svelte-fwv2px{bottom:0;cursor:se-resize;height:20px;position:absolute;right:0;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:20px}.svlt-grid-resizer.svelte-fwv2px:after{border-bottom:2px solid rgba(0,0,0,.4);border-right:2px solid rgba(0,0,0,.4);bottom:3px;content:"";height:5px;position:absolute;right:3px;width:5px}.svlt-grid-active.svelte-fwv2px{backface-visibility:hidden;-webkit-backface-visibility:hidden;-moz-backface-visibility:hidden;-o-backface-visibility:hidden;-ms-backface-visibility:hidden;cursor:-webkit-grabbing;cursor:grabbing;opacity:.5;position:fixed;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:3}.shadow-active.svelte-fwv2px{transition:all .2s;z-index:2}.svlt-grid-shadow.svelte-fwv2px{backface-visibility:hidden;-webkit-backface-visibility:hidden;background:red;background:pink;position:absolute;will-change:transform}',
  map: '{"version":3,"file":"index.svelte","sources":["index.svelte"],"sourcesContent":["<style>.svlt-grid-item{backface-visibility:hidden;-webkit-backface-visibility:hidden;position:absolute;touch-action:none;will-change:auto}.svlt-grid-resizer{bottom:0;cursor:se-resize;height:20px;position:absolute;right:0;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:20px}.svlt-grid-resizer:after{border-bottom:2px solid rgba(0,0,0,.4);border-right:2px solid rgba(0,0,0,.4);bottom:3px;content:\\"\\";height:5px;position:absolute;right:3px;width:5px}.svlt-grid-active{backface-visibility:hidden;-webkit-backface-visibility:hidden;-moz-backface-visibility:hidden;-o-backface-visibility:hidden;-ms-backface-visibility:hidden;cursor:-webkit-grabbing;cursor:grabbing;opacity:.5;position:fixed;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:3}.shadow-active{transition:all .2s;z-index:2}.svlt-grid-shadow{backface-visibility:hidden;-webkit-backface-visibility:hidden;background:red;background:pink;position:absolute;will-change:transform}</style>\\n\\n<div\\n  draggable={false}\\n  on:pointerdown={item && item.customDragger ? null : draggable && pointerdown}\\n  class=\\"svlt-grid-item\\"\\n  class:svlt-grid-active={active || (trans && rect)}\\n  style=\\"width: {active ? newSize.width : width}px; height:{active ? newSize.height : height}px; \\n  {active ? `transform: translate(${cordDiff.x}px, ${cordDiff.y}px);top:${rect.top}px;left:${rect.left}px;` : trans ? `transform: translate(${cordDiff.x}px, ${cordDiff.y}px); position:absolute; transition: width 0.2s, height 0.2s;` : `transition: transform 0.2s, opacity 0.2s; transform: translate(${left}px, ${top}px); `} \\">\\n  <slot movePointerDown={pointerdown} {resizePointerDown} />\\n  {#if resizable && !item.customResizer}\\n    <div class=\\"svlt-grid-resizer\\" on:pointerdown={resizePointerDown} />\\n  {/if}\\n</div>\\n\\n{#if active || trans}\\n  <div class=\\"svlt-grid-shadow shadow-active\\" style=\\"width: {shadow.w * xPerPx - gapX * 2}px; height: {shadow.h * yPerPx - gapY * 2}px; transform: translate({shadow.x * xPerPx + gapX}px, {shadow.y * yPerPx + gapY}px); \\" bind:this={shadowElement} />\\n{/if}\\n\\n<script>\\n  import { createEventDispatcher } from \\"svelte\\";\\n\\n  const dispatch = createEventDispatcher();\\n\\n  export let sensor;\\n  export let width;\\n  export let height;\\n  export let left;\\n  export let top;\\n\\n  export let resizable;\\n  export let draggable;\\n\\n  export let id;\\n  export let container;\\n\\n  export let xPerPx;\\n  export let yPerPx;\\n\\n  export let gapX;\\n  export let gapY;\\n  export let item;\\n\\n  export let max;\\n  export let min;\\n\\n  export let cols;\\n\\n  export let nativeContainer;\\n\\n  let shadowElement;\\n  let shadow = {};\\n\\n  let active = false;\\n\\n  let initX, initY;\\n\\n  let capturePos = {\\n    x: 0,\\n    y: 0,\\n  };\\n\\n  let cordDiff = { x: 0, y: 0 };\\n\\n  let newSize = { width, height };\\n  let trans = false;\\n\\n  let anima;\\n\\n  const inActivate = () => {\\n    const shadowBound = shadowElement.getBoundingClientRect();\\n    const xdragBound = rect.left + cordDiff.x;\\n    const ydragBound = rect.top + cordDiff.y;\\n\\n    cordDiff.x = shadow.x * xPerPx + gapX - (shadowBound.x - xdragBound);\\n    cordDiff.y = shadow.y * yPerPx + gapY - (shadowBound.y - ydragBound);\\n\\n    active = false;\\n    trans = true;\\n\\n    clearTimeout(anima);\\n\\n    anima = setTimeout(() => {\\n      trans = false;\\n    }, 100);\\n\\n    dispatch(\\"pointerup\\", {\\n      id,\\n    });\\n  };\\n\\n  let repaint = (cb, isPointerUp) => {\\n    dispatch(\\"repaint\\", {\\n      id,\\n      shadow,\\n      isPointerUp,\\n      onUpdate: cb,\\n    });\\n  };\\n\\n  // Autoscroll\\n  let _scrollTop = 0;\\n  let containerFrame;\\n  let rect;\\n  let scrollElement;\\n\\n  const getContainerFrame = (element) => {\\n    if (element === document.documentElement || !element) {\\n      const { height, top, right, bottom, left } = nativeContainer.getBoundingClientRect();\\n\\n      return {\\n        top: Math.max(0, top),\\n        bottom: Math.min(window.innerHeight, bottom),\\n      };\\n    }\\n\\n    return element.getBoundingClientRect();\\n  };\\n\\n  const getScroller = (element) => (!element ? document.documentElement : element);\\n\\n  const pointerdown = ({ clientX, clientY, target }) => {\\n    initX = clientX;\\n    initY = clientY;\\n\\n    capturePos = { x: left, y: top };\\n    shadow = { x: item.x, y: item.y, w: item.w, h: item.h };\\n    newSize = { width, height };\\n\\n    containerFrame = getContainerFrame(container);\\n    scrollElement = getScroller(container);\\n\\n    cordDiff = { x: 0, y: 0 };\\n    rect = target.closest(\\".svlt-grid-item\\").getBoundingClientRect();\\n\\n    active = true;\\n    trans = false;\\n    _scrollTop = scrollElement.scrollTop;\\n\\n    window.addEventListener(\\"pointermove\\", pointermove);\\n    window.addEventListener(\\"pointerup\\", pointerup);\\n  };\\n\\n  let sign = { x: 0, y: 0 };\\n  let vel = { x: 0, y: 0 };\\n  let intervalId = 0;\\n\\n  const stopAutoscroll = () => {\\n    clearInterval(intervalId);\\n    intervalId = false;\\n    sign = { x: 0, y: 0 };\\n    vel = { x: 0, y: 0 };\\n  };\\n\\n  const update = () => {\\n    const _newScrollTop = scrollElement.scrollTop - _scrollTop;\\n\\n    const boundX = capturePos.x + cordDiff.x;\\n    const boundY = capturePos.y + (cordDiff.y + _newScrollTop);\\n\\n    let gridX = Math.round(boundX / xPerPx);\\n    let gridY = Math.round(boundY / yPerPx);\\n\\n    shadow.x = Math.max(Math.min(gridX, cols - shadow.w), 0);\\n    shadow.y = Math.max(gridY, 0);\\n\\n    if (max.y) {\\n      shadow.y = Math.min(shadow.y, max.y);\\n    }\\n\\n    repaint();\\n  };\\n\\n  const pointermove = (event) => {\\n    event.preventDefault();\\n    event.stopPropagation();\\n    event.stopImmediatePropagation();\\n\\n    const { clientX, clientY } = event;\\n    cordDiff = { x: clientX - initX, y: clientY - initY };\\n\\n    const Y_SENSOR = sensor;\\n\\n    let velocityTop = Math.max(0, (containerFrame.top + Y_SENSOR - clientY) / Y_SENSOR);\\n    let velocityBottom = Math.max(0, (clientY - (containerFrame.bottom - Y_SENSOR)) / Y_SENSOR);\\n\\n    const topSensor = velocityTop > 0 && velocityBottom === 0;\\n    const bottomSensor = velocityBottom > 0 && velocityTop === 0;\\n\\n    sign.y = topSensor ? -1 : bottomSensor ? 1 : 0;\\n    vel.y = sign.y === -1 ? velocityTop : velocityBottom;\\n\\n    if (vel.y > 0) {\\n      if (!intervalId) {\\n        // Start scrolling\\n        // TODO Use requestAnimationFrame\\n        intervalId = setInterval(() => {\\n          scrollElement.scrollTop += 2 * (vel.y + Math.sign(vel.y)) * sign.y;\\n          update();\\n        }, 10);\\n      }\\n    } else if (intervalId) {\\n      stopAutoscroll();\\n    } else {\\n      update();\\n    }\\n  };\\n\\n  const pointerup = (e) => {\\n    stopAutoscroll();\\n\\n    window.removeEventListener(\\"pointerdown\\", pointerdown);\\n    window.removeEventListener(\\"pointermove\\", pointermove);\\n    window.removeEventListener(\\"pointerup\\", pointerup);\\n    repaint(inActivate, true);\\n  };\\n\\n  // Resize\\n\\n  let resizeInitPos = { x: 0, y: 0 };\\n  let initSize = { width: 0, height: 0 };\\n\\n  const resizePointerDown = (e) => {\\n    e.stopPropagation();\\n    const { pageX, pageY } = e;\\n\\n    resizeInitPos = { x: pageX, y: pageY };\\n    initSize = { width, height };\\n\\n    cordDiff = { x: 0, y: 0 };\\n    rect = e.target.closest(\\".svlt-grid-item\\").getBoundingClientRect();\\n    newSize = { width, height };\\n\\n    active = true;\\n    trans = false;\\n    shadow = { x: item.x, y: item.y, w: item.w, h: item.h };\\n\\n    containerFrame = getContainerFrame(container);\\n    scrollElement = getScroller(container);\\n\\n    window.addEventListener(\\"pointermove\\", resizePointerMove);\\n    window.addEventListener(\\"pointerup\\", resizePointerUp);\\n  };\\n\\n  const resizePointerMove = ({ pageX, pageY }) => {\\n    newSize.width = initSize.width + pageX - resizeInitPos.x;\\n    newSize.height = initSize.height + pageY - resizeInitPos.y;\\n\\n    // Get max col number\\n    let maxWidth = cols - shadow.x;\\n    maxWidth = Math.min(max.w, maxWidth) || maxWidth;\\n\\n    // Limit bound\\n    newSize.width = Math.max(Math.min(newSize.width, maxWidth * xPerPx - gapX * 2), min.w * xPerPx - gapX * 2);\\n\\n    newSize.height = Math.max(newSize.height, min.h * yPerPx - gapY * 2);\\n\\n    if (max.h) {\\n      newSize.height = Math.min(newSize.height, max.h * yPerPx - gapY * 2);\\n    }\\n    // Limit col & row\\n    shadow.w = Math.round((newSize.width + gapX * 2) / xPerPx);\\n    shadow.h = Math.round((newSize.height + gapY * 2) / yPerPx);\\n\\n    repaint();\\n  };\\n\\n  const resizePointerUp = (e) => {\\n    e.stopPropagation();\\n\\n    repaint(inActivate, true);\\n\\n    window.removeEventListener(\\"pointermove\\", resizePointerMove);\\n    window.removeEventListener(\\"pointerup\\", resizePointerUp);\\n  };\\n<\/script>\\n"],"names":[],"mappings":"AAAO,6BAAe,CAAC,oBAAoB,MAAM,CAAC,4BAA4B,MAAM,CAAC,SAAS,QAAQ,CAAC,aAAa,IAAI,CAAC,YAAY,IAAI,CAAC,gCAAkB,CAAC,OAAO,CAAC,CAAC,OAAO,SAAS,CAAC,OAAO,IAAI,CAAC,SAAS,QAAQ,CAAC,MAAM,CAAC,CAAC,oBAAoB,IAAI,CAAC,iBAAiB,IAAI,CAAC,gBAAgB,IAAI,CAAC,YAAY,IAAI,CAAC,MAAM,IAAI,CAAC,gCAAkB,MAAM,CAAC,cAAc,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,aAAa,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,GAAG,CAAC,QAAQ,EAAE,CAAC,OAAO,GAAG,CAAC,SAAS,QAAQ,CAAC,MAAM,GAAG,CAAC,MAAM,GAAG,CAAC,+BAAiB,CAAC,oBAAoB,MAAM,CAAC,4BAA4B,MAAM,CAAC,yBAAyB,MAAM,CAAC,uBAAuB,MAAM,CAAC,wBAAwB,MAAM,CAAC,OAAO,gBAAgB,CAAC,OAAO,QAAQ,CAAC,QAAQ,EAAE,CAAC,SAAS,KAAK,CAAC,oBAAoB,IAAI,CAAC,iBAAiB,IAAI,CAAC,gBAAgB,IAAI,CAAC,YAAY,IAAI,CAAC,QAAQ,CAAC,CAAC,4BAAc,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,+BAAiB,CAAC,oBAAoB,MAAM,CAAC,4BAA4B,MAAM,CAAC,WAAW,GAAG,CAAC,WAAW,IAAI,CAAC,SAAS,QAAQ,CAAC,YAAY,SAAS,CAAC"}'
};
const MoveResize = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  const dispatch = createEventDispatcher();
  let { sensor } = $$props;
  let { width } = $$props;
  let { height } = $$props;
  let { left } = $$props;
  let { top } = $$props;
  let { resizable } = $$props;
  let { draggable } = $$props;
  let { id } = $$props;
  let { container } = $$props;
  let { xPerPx } = $$props;
  let { yPerPx } = $$props;
  let { gapX } = $$props;
  let { gapY } = $$props;
  let { item } = $$props;
  let { max } = $$props;
  let { min } = $$props;
  let { cols } = $$props;
  let { nativeContainer } = $$props;
  let shadowElement;
  let shadow = {};
  let active = false;
  let initX, initY;
  let capturePos = { x: 0, y: 0 };
  let cordDiff = { x: 0, y: 0 };
  let newSize = { width, height };
  let trans = false;
  let anima;
  const inActivate = () => {
    const shadowBound = shadowElement.getBoundingClientRect();
    const xdragBound = rect.left + cordDiff.x;
    const ydragBound = rect.top + cordDiff.y;
    cordDiff.x = shadow.x * xPerPx + gapX - (shadowBound.x - xdragBound);
    cordDiff.y = shadow.y * yPerPx + gapY - (shadowBound.y - ydragBound);
    active = false;
    trans = true;
    clearTimeout(anima);
    anima = setTimeout(() => {
      trans = false;
    }, 100);
    dispatch("pointerup", { id });
  };
  let repaint = (cb, isPointerUp) => {
    dispatch("repaint", { id, shadow, isPointerUp, onUpdate: cb });
  };
  let _scrollTop = 0;
  let containerFrame;
  let rect;
  let scrollElement;
  const getContainerFrame = (element) => {
    if (element === document.documentElement || !element) {
      const { height: height2, top: top2, right, bottom, left: left2 } = nativeContainer.getBoundingClientRect();
      return {
        top: Math.max(0, top2),
        bottom: Math.min(window.innerHeight, bottom)
      };
    }
    return element.getBoundingClientRect();
  };
  const getScroller = (element) => !element ? document.documentElement : element;
  const pointerdown = ({ clientX, clientY, target }) => {
    initX = clientX;
    initY = clientY;
    capturePos = { x: left, y: top };
    shadow = {
      x: item.x,
      y: item.y,
      w: item.w,
      h: item.h
    };
    newSize = { width, height };
    containerFrame = getContainerFrame(container);
    scrollElement = getScroller(container);
    cordDiff = { x: 0, y: 0 };
    rect = target.closest(".svlt-grid-item").getBoundingClientRect();
    active = true;
    trans = false;
    _scrollTop = scrollElement.scrollTop;
    window.addEventListener("pointermove", pointermove);
    window.addEventListener("pointerup", pointerup);
  };
  let sign = { x: 0, y: 0 };
  let vel = { x: 0, y: 0 };
  let intervalId = 0;
  const stopAutoscroll = () => {
    clearInterval(intervalId);
    intervalId = false;
    sign = { x: 0, y: 0 };
    vel = { x: 0, y: 0 };
  };
  const update = () => {
    const _newScrollTop = scrollElement.scrollTop - _scrollTop;
    const boundX = capturePos.x + cordDiff.x;
    const boundY = capturePos.y + (cordDiff.y + _newScrollTop);
    let gridX = Math.round(boundX / xPerPx);
    let gridY = Math.round(boundY / yPerPx);
    shadow.x = Math.max(Math.min(gridX, cols - shadow.w), 0);
    shadow.y = Math.max(gridY, 0);
    if (max.y) {
      shadow.y = Math.min(shadow.y, max.y);
    }
    repaint();
  };
  const pointermove = (event) => {
    event.preventDefault();
    event.stopPropagation();
    event.stopImmediatePropagation();
    const { clientX, clientY } = event;
    cordDiff = { x: clientX - initX, y: clientY - initY };
    const Y_SENSOR = sensor;
    let velocityTop = Math.max(0, (containerFrame.top + Y_SENSOR - clientY) / Y_SENSOR);
    let velocityBottom = Math.max(0, (clientY - (containerFrame.bottom - Y_SENSOR)) / Y_SENSOR);
    const topSensor = velocityTop > 0 && velocityBottom === 0;
    const bottomSensor = velocityBottom > 0 && velocityTop === 0;
    sign.y = topSensor ? -1 : bottomSensor ? 1 : 0;
    vel.y = sign.y === -1 ? velocityTop : velocityBottom;
    if (vel.y > 0) {
      if (!intervalId) {
        intervalId = setInterval(() => {
          scrollElement.scrollTop += 2 * (vel.y + Math.sign(vel.y)) * sign.y;
          update();
        }, 10);
      }
    } else if (intervalId) {
      stopAutoscroll();
    } else {
      update();
    }
  };
  const pointerup = (e) => {
    stopAutoscroll();
    window.removeEventListener("pointerdown", pointerdown);
    window.removeEventListener("pointermove", pointermove);
    window.removeEventListener("pointerup", pointerup);
    repaint(inActivate, true);
  };
  let resizeInitPos = { x: 0, y: 0 };
  let initSize = { width: 0, height: 0 };
  const resizePointerDown = (e) => {
    e.stopPropagation();
    const { pageX, pageY } = e;
    resizeInitPos = { x: pageX, y: pageY };
    initSize = { width, height };
    cordDiff = { x: 0, y: 0 };
    rect = e.target.closest(".svlt-grid-item").getBoundingClientRect();
    newSize = { width, height };
    active = true;
    trans = false;
    shadow = {
      x: item.x,
      y: item.y,
      w: item.w,
      h: item.h
    };
    containerFrame = getContainerFrame(container);
    scrollElement = getScroller(container);
    window.addEventListener("pointermove", resizePointerMove);
    window.addEventListener("pointerup", resizePointerUp);
  };
  const resizePointerMove = ({ pageX, pageY }) => {
    newSize.width = initSize.width + pageX - resizeInitPos.x;
    newSize.height = initSize.height + pageY - resizeInitPos.y;
    let maxWidth = cols - shadow.x;
    maxWidth = Math.min(max.w, maxWidth) || maxWidth;
    newSize.width = Math.max(Math.min(newSize.width, maxWidth * xPerPx - gapX * 2), min.w * xPerPx - gapX * 2);
    newSize.height = Math.max(newSize.height, min.h * yPerPx - gapY * 2);
    if (max.h) {
      newSize.height = Math.min(newSize.height, max.h * yPerPx - gapY * 2);
    }
    shadow.w = Math.round((newSize.width + gapX * 2) / xPerPx);
    shadow.h = Math.round((newSize.height + gapY * 2) / yPerPx);
    repaint();
  };
  const resizePointerUp = (e) => {
    e.stopPropagation();
    repaint(inActivate, true);
    window.removeEventListener("pointermove", resizePointerMove);
    window.removeEventListener("pointerup", resizePointerUp);
  };
  if ($$props.sensor === void 0 && $$bindings.sensor && sensor !== void 0)
    $$bindings.sensor(sensor);
  if ($$props.width === void 0 && $$bindings.width && width !== void 0)
    $$bindings.width(width);
  if ($$props.height === void 0 && $$bindings.height && height !== void 0)
    $$bindings.height(height);
  if ($$props.left === void 0 && $$bindings.left && left !== void 0)
    $$bindings.left(left);
  if ($$props.top === void 0 && $$bindings.top && top !== void 0)
    $$bindings.top(top);
  if ($$props.resizable === void 0 && $$bindings.resizable && resizable !== void 0)
    $$bindings.resizable(resizable);
  if ($$props.draggable === void 0 && $$bindings.draggable && draggable !== void 0)
    $$bindings.draggable(draggable);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.container === void 0 && $$bindings.container && container !== void 0)
    $$bindings.container(container);
  if ($$props.xPerPx === void 0 && $$bindings.xPerPx && xPerPx !== void 0)
    $$bindings.xPerPx(xPerPx);
  if ($$props.yPerPx === void 0 && $$bindings.yPerPx && yPerPx !== void 0)
    $$bindings.yPerPx(yPerPx);
  if ($$props.gapX === void 0 && $$bindings.gapX && gapX !== void 0)
    $$bindings.gapX(gapX);
  if ($$props.gapY === void 0 && $$bindings.gapY && gapY !== void 0)
    $$bindings.gapY(gapY);
  if ($$props.item === void 0 && $$bindings.item && item !== void 0)
    $$bindings.item(item);
  if ($$props.max === void 0 && $$bindings.max && max !== void 0)
    $$bindings.max(max);
  if ($$props.min === void 0 && $$bindings.min && min !== void 0)
    $$bindings.min(min);
  if ($$props.cols === void 0 && $$bindings.cols && cols !== void 0)
    $$bindings.cols(cols);
  if ($$props.nativeContainer === void 0 && $$bindings.nativeContainer && nativeContainer !== void 0)
    $$bindings.nativeContainer(nativeContainer);
  $$result.css.add(css$2);
  return `<div${add_attribute("draggable", false, 0)} class="${[
    "svlt-grid-item svelte-fwv2px",
    active || trans && rect ? "svlt-grid-active" : ""
  ].join(" ").trim()}" style="${"width: " + escape(active ? newSize.width : width) + "px; height:" + escape(active ? newSize.height : height) + "px; \n  " + escape(active ? `transform: translate(${cordDiff.x}px, ${cordDiff.y}px);top:${rect.top}px;left:${rect.left}px;` : trans ? `transform: translate(${cordDiff.x}px, ${cordDiff.y}px); position:absolute; transition: width 0.2s, height 0.2s;` : `transition: transform 0.2s, opacity 0.2s; transform: translate(${left}px, ${top}px); `) + " "}">${slots.default ? slots.default({
    movePointerDown: pointerdown,
    resizePointerDown
  }) : ``}
  ${resizable && !item.customResizer ? `<div class="${"svlt-grid-resizer svelte-fwv2px"}"></div>` : ``}</div>

${active || trans ? `<div class="${"svlt-grid-shadow shadow-active svelte-fwv2px"}" style="${"width: " + escape(shadow.w * xPerPx - gapX * 2) + "px; height: " + escape(shadow.h * yPerPx - gapY * 2) + "px; transform: translate(" + escape(shadow.x * xPerPx + gapX) + "px, " + escape(shadow.y * yPerPx + gapY) + "px); "}"${add_attribute("this", shadowElement, 1)}></div>` : ``}`;
});
var index_svelte_svelte_type_style_lang = ".svlt-grid-container.svelte-10ksjm1{position:relative;width:100%}";
const css$1 = {
  code: ".svlt-grid-container.svelte-10ksjm1{position:relative;width:100%}",
  map: '{"version":3,"file":"index.svelte","sources":["index.svelte"],"sourcesContent":["<style>.svlt-grid-container{position:relative;width:100%}</style>\\n\\n<div class=\\"svlt-grid-container\\" style=\\"height: {containerHeight}px\\" bind:this={container}>\\n  {#if xPerPx || !fastStart}\\n    {#each items as item, i (item.id)}\\n      <MoveResize\\n        on:repaint={handleRepaint}\\n        on:pointerup={pointerup}\\n        id={item.id}\\n        resizable={item[getComputedCols] && item[getComputedCols].resizable}\\n        draggable={item[getComputedCols] && item[getComputedCols].draggable}\\n        {xPerPx}\\n        {yPerPx}\\n        width={Math.min(getComputedCols, item[getComputedCols] && item[getComputedCols].w) * xPerPx - gapX * 2}\\n        height={(item[getComputedCols] && item[getComputedCols].h) * yPerPx - gapY * 2}\\n        top={(item[getComputedCols] && item[getComputedCols].y) * yPerPx + gapY}\\n        left={(item[getComputedCols] && item[getComputedCols].x) * xPerPx + gapX}\\n        item={item[getComputedCols]}\\n        min={item[getComputedCols] && item[getComputedCols].min}\\n        max={item[getComputedCols] && item[getComputedCols].max}\\n        cols={getComputedCols}\\n        {gapX}\\n        {gapY}\\n        {sensor}\\n        container={scroller}\\n        nativeContainer={container}\\n        let:resizePointerDown\\n        let:movePointerDown>\\n        {#if item[getComputedCols]}\\n          <slot {movePointerDown} {resizePointerDown} dataItem={item} item={item[getComputedCols]} index={i} />\\n        {/if}\\n      </MoveResize>\\n    {/each}\\n  {/if}\\n</div>\\n\\n<script>\\n  import { getContainerHeight } from \\"./utils/container.js\\";\\n  import { moveItemsAroundItem, moveItem, getItemById, specifyUndefinedColumns, findFreeSpaceForItem } from \\"./utils/item.js\\";\\n  import { onMount, createEventDispatcher } from \\"svelte\\";\\n  import { getColumn, getRowsCount, throttle } from \\"./utils/other.js\\";\\n  import { makeMatrixFromItems } from \\"./utils/matrix.js\\";\\n  import MoveResize from \\"./MoveResize/index.svelte\\";\\n\\n  const dispatch = createEventDispatcher();\\n\\n  export let fillSpace = false;\\n  export let items;\\n  export let rowHeight;\\n  export let cols;\\n  export let gap = [10, 10];\\n  export let fastStart = false;\\n  export let throttleUpdate = 100;\\n  export let throttleResize = 100;\\n\\n  export let scroller = undefined;\\n  export let sensor = 20;\\n\\n  let getComputedCols;\\n\\n  let container;\\n\\n  $: [gapX, gapY] = gap;\\n\\n  let xPerPx = 0;\\n  let yPerPx = rowHeight;\\n\\n  let documentWidth;\\n\\n  let containerWidth;\\n\\n  $: containerHeight = getContainerHeight(items, yPerPx, getComputedCols);\\n\\n  const pointerup = (ev) => {\\n    dispatch(\\"pointerup\\", {\\n      id: ev.detail.id,\\n      cols: getComputedCols,\\n    });\\n  };\\n\\n  const onResize = throttle(() => {\\n    items = specifyUndefinedColumns(items, getComputedCols, cols);\\n    dispatch(\\"resize\\", {\\n      cols: getComputedCols,\\n      xPerPx,\\n      yPerPx,\\n      width: containerWidth,\\n    });\\n  }, throttleUpdate);\\n\\n  onMount(() => {\\n    const sizeObserver = new ResizeObserver((entries) => {\\n      let width = entries[0].contentRect.width;\\n\\n      if (width === containerWidth) return;\\n\\n      getComputedCols = getColumn(width, cols);\\n\\n      xPerPx = width / getComputedCols;\\n\\n      if (!containerWidth) {\\n        items = specifyUndefinedColumns(items, getComputedCols, cols);\\n\\n        dispatch(\\"mount\\", {\\n          cols: getComputedCols,\\n          xPerPx,\\n          yPerPx, // same as rowHeight\\n        });\\n      } else {\\n        onResize();\\n      }\\n\\n      containerWidth = width;\\n    });\\n\\n    sizeObserver.observe(container);\\n\\n    return () => sizeObserver.disconnect();\\n  });\\n\\n  const updateMatrix = ({ detail }) => {\\n    let activeItem = getItemById(detail.id, items);\\n\\n    if (activeItem) {\\n      activeItem = {\\n        ...activeItem,\\n        [getComputedCols]: {\\n          ...activeItem[getComputedCols],\\n          ...detail.shadow,\\n        },\\n      };\\n\\n      if (fillSpace) {\\n        items = moveItemsAroundItem(activeItem, items, getComputedCols, getItemById(detail.id, items));\\n      } else {\\n        items = moveItem(activeItem, items, getComputedCols, getItemById(detail.id, items));\\n      }\\n\\n      if (detail.onUpdate) detail.onUpdate();\\n\\n      dispatch(\\"change\\", {\\n        unsafeItem: activeItem,\\n        id: activeItem.id,\\n        cols: getComputedCols,\\n      });\\n    }\\n  };\\n\\n  const throttleMatrix = throttle(updateMatrix, throttleResize);\\n\\n  const handleRepaint = ({ detail }) => {\\n    if (!detail.isPointerUp) {\\n      throttleMatrix({ detail });\\n    } else {\\n      updateMatrix({ detail });\\n    }\\n  };\\n<\/script>\\n"],"names":[],"mappings":"AAAO,mCAAoB,CAAC,SAAS,QAAQ,CAAC,MAAM,IAAI,CAAC"}'
};
const Src = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let gapX;
  let gapY;
  let containerHeight;
  const dispatch = createEventDispatcher();
  let { fillSpace = false } = $$props;
  let { items } = $$props;
  let { rowHeight } = $$props;
  let { cols } = $$props;
  let { gap = [10, 10] } = $$props;
  let { fastStart = false } = $$props;
  let { throttleUpdate = 100 } = $$props;
  let { throttleResize = 100 } = $$props;
  let { scroller = void 0 } = $$props;
  let { sensor = 20 } = $$props;
  let getComputedCols;
  let container;
  let xPerPx = 0;
  let yPerPx = rowHeight;
  let containerWidth;
  const onResize = throttle(() => {
    items = specifyUndefinedColumns(items, getComputedCols, cols);
    dispatch("resize", {
      cols: getComputedCols,
      xPerPx,
      yPerPx,
      width: containerWidth
    });
  }, throttleUpdate);
  onMount(() => {
    const sizeObserver = new ResizeObserver((entries) => {
      let width = entries[0].contentRect.width;
      if (width === containerWidth)
        return;
      getComputedCols = getColumn(width, cols);
      xPerPx = width / getComputedCols;
      if (!containerWidth) {
        items = specifyUndefinedColumns(items, getComputedCols, cols);
        dispatch("mount", {
          cols: getComputedCols,
          xPerPx,
          yPerPx
        });
      } else {
        onResize();
      }
      containerWidth = width;
    });
    sizeObserver.observe(container);
    return () => sizeObserver.disconnect();
  });
  if ($$props.fillSpace === void 0 && $$bindings.fillSpace && fillSpace !== void 0)
    $$bindings.fillSpace(fillSpace);
  if ($$props.items === void 0 && $$bindings.items && items !== void 0)
    $$bindings.items(items);
  if ($$props.rowHeight === void 0 && $$bindings.rowHeight && rowHeight !== void 0)
    $$bindings.rowHeight(rowHeight);
  if ($$props.cols === void 0 && $$bindings.cols && cols !== void 0)
    $$bindings.cols(cols);
  if ($$props.gap === void 0 && $$bindings.gap && gap !== void 0)
    $$bindings.gap(gap);
  if ($$props.fastStart === void 0 && $$bindings.fastStart && fastStart !== void 0)
    $$bindings.fastStart(fastStart);
  if ($$props.throttleUpdate === void 0 && $$bindings.throttleUpdate && throttleUpdate !== void 0)
    $$bindings.throttleUpdate(throttleUpdate);
  if ($$props.throttleResize === void 0 && $$bindings.throttleResize && throttleResize !== void 0)
    $$bindings.throttleResize(throttleResize);
  if ($$props.scroller === void 0 && $$bindings.scroller && scroller !== void 0)
    $$bindings.scroller(scroller);
  if ($$props.sensor === void 0 && $$bindings.sensor && sensor !== void 0)
    $$bindings.sensor(sensor);
  $$result.css.add(css$1);
  [gapX, gapY] = gap;
  containerHeight = getContainerHeight(items, yPerPx, getComputedCols);
  return `<div class="${"svlt-grid-container svelte-10ksjm1"}" style="${"height: " + escape(containerHeight) + "px"}"${add_attribute("this", container, 1)}>${xPerPx || !fastStart ? `${each(items, (item, i) => `${validate_component(MoveResize, "MoveResize").$$render($$result, {
    id: item.id,
    resizable: item[getComputedCols] && item[getComputedCols].resizable,
    draggable: item[getComputedCols] && item[getComputedCols].draggable,
    xPerPx,
    yPerPx,
    width: Math.min(getComputedCols, item[getComputedCols] && item[getComputedCols].w) * xPerPx - gapX * 2,
    height: (item[getComputedCols] && item[getComputedCols].h) * yPerPx - gapY * 2,
    top: (item[getComputedCols] && item[getComputedCols].y) * yPerPx + gapY,
    left: (item[getComputedCols] && item[getComputedCols].x) * xPerPx + gapX,
    item: item[getComputedCols],
    min: item[getComputedCols] && item[getComputedCols].min,
    max: item[getComputedCols] && item[getComputedCols].max,
    cols: getComputedCols,
    gapX,
    gapY,
    sensor,
    container: scroller,
    nativeContainer: container
  }, {}, {
    default: ({ resizePointerDown, movePointerDown }) => `${item[getComputedCols] ? `${slots.default ? slots.default({
      movePointerDown,
      resizePointerDown,
      dataItem: item,
      item: item[getComputedCols],
      index: i
    }) : ``}` : ``}
      `
  })}`)}` : ``}
</div>`;
});
function getRowsCount(items, cols) {
  const getItemsMaxHeight = items.map((val) => {
    const item = val[cols];
    return (item && item.y) + (item && item.h) || 0;
  });
  return Math.max(...getItemsMaxHeight, 1);
}
const makeMatrix = (rows, cols) => Array.from(Array(rows), () => new Array(cols));
function makeMatrixFromItems(items, _row, _col) {
  let matrix = makeMatrix(_row, _col);
  for (var i = 0; i < items.length; i++) {
    const value = items[i][_col];
    if (value) {
      const { x, y, h } = value;
      const id = items[i].id;
      const w = Math.min(_col, value.w);
      for (var j = y; j < y + h; j++) {
        const row = matrix[j];
        for (var k = x; k < x + w; k++) {
          row[k] = { ...value, id };
        }
      }
    }
  }
  return matrix;
}
function findCloseBlocks(items, matrix, curObject) {
  const { h, x, y } = curObject;
  const w = Math.min(matrix[0].length, curObject.w);
  const tempR = matrix.slice(y, y + h);
  let result = [];
  for (var i = 0; i < tempR.length; i++) {
    let tempA = tempR[i].slice(x, x + w);
    result = [...result, ...tempA.map((val) => val.id && val.id !== curObject.id && val.id).filter(Boolean)];
  }
  return [...new Set(result)];
}
function makeMatrixFromItemsIgnore(items, ignoreList, _row, _col) {
  let matrix = makeMatrix(_row, _col);
  for (var i = 0; i < items.length; i++) {
    const value = items[i][_col];
    const id = items[i].id;
    const { x, y, h } = value;
    const w = Math.min(_col, value.w);
    if (ignoreList.indexOf(id) === -1) {
      for (var j = y; j < y + h; j++) {
        const row = matrix[j];
        if (row) {
          for (var k = x; k < x + w; k++) {
            row[k] = { ...value, id };
          }
        }
      }
    }
  }
  return matrix;
}
function findItemsById(closeBlocks, items) {
  return items.filter((value) => closeBlocks.indexOf(value.id) !== -1);
}
function findFreeSpaceForItem(matrix, item) {
  const cols = matrix[0].length;
  const w = Math.min(cols, item.w);
  let xNtime = cols - w;
  let getMatrixRows = matrix.length;
  for (var i = 0; i < getMatrixRows; i++) {
    const row = matrix[i];
    for (var j = 0; j < xNtime + 1; j++) {
      const sliceA = row.slice(j, j + w);
      const empty2 = sliceA.every((val) => val === void 0);
      if (empty2) {
        const isEmpty = matrix.slice(i, i + item.h).every((a) => a.slice(j, j + w).every((n) => n === void 0));
        if (isEmpty) {
          return { y: i, x: j };
        }
      }
    }
  }
  return {
    y: getMatrixRows,
    x: 0
  };
}
const getItem = (item, col) => {
  return { ...item[col], id: item.id };
};
const updateItem = (elements, active, position, col) => {
  return elements.map((value) => {
    if (value.id === active.id) {
      return { ...value, [col]: { ...value[col], ...position } };
    }
    return value;
  });
};
function moveItem(active, items, cols, original) {
  const item = getItem(active, cols);
  let matrix = makeMatrixFromItemsIgnore(items, [item.id], getRowsCount(items, cols), cols);
  const closeBlocks = findCloseBlocks(items, matrix, item);
  let closeObj = findItemsById(closeBlocks, items);
  const fixed = closeObj.find((value) => value[cols].fixed);
  if (fixed)
    return items;
  items = updateItem(items, active, item, cols);
  matrix = makeMatrixFromItemsIgnore(items, closeBlocks, getRowsCount(items, cols), cols);
  let tempItems = items;
  let tempCloseBlocks = closeBlocks;
  let exclude = [];
  closeObj.forEach((item2) => {
    let position = findFreeSpaceForItem(matrix, item2[cols]);
    exclude.push(item2.id);
    tempItems = updateItem(tempItems, item2, position, cols);
    let getIgnoreItems = tempCloseBlocks.filter((value) => exclude.indexOf(value) === -1);
    matrix = makeMatrixFromItemsIgnore(tempItems, getIgnoreItems, getRowsCount(tempItems, cols), cols);
  });
  return tempItems;
}
function normalize(items, col) {
  let result = items.slice();
  result.forEach((value) => {
    const getItem2 = value[col];
    if (!getItem2.static) {
      result = moveItem(getItem2, result, col);
    }
  });
  return result;
}
function adjust(items, col) {
  let matrix = makeMatrix(getRowsCount(items, col), col);
  let res = [];
  items.forEach((item) => {
    let position = findFreeSpaceForItem(matrix, item[col]);
    res.push({
      ...item,
      [col]: {
        ...item[col],
        ...position
      }
    });
    matrix = makeMatrixFromItems(res, getRowsCount(res, col), col);
  });
  return res;
}
function makeItem(item) {
  const { min = { w: 1, h: 1 }, max } = item;
  return {
    fixed: false,
    resizable: !item.fixed,
    draggable: !item.fixed,
    customDragger: false,
    customResizer: false,
    min: {
      w: Math.max(1, min.w),
      h: Math.max(1, min.h)
    },
    max: { ...max },
    ...item
  };
}
const gridHelp = {
  normalize(items, col) {
    getRowsCount(items, col);
    return normalize(items, col);
  },
  adjust(items, col) {
    return adjust(items, col);
  },
  item(obj) {
    return makeItem(obj);
  },
  findSpace(item, items, cols) {
    let matrix = makeMatrixFromItems(items, getRowsCount(items, cols), cols);
    let position = findFreeSpaceForItem(matrix, item[cols]);
    return position;
  }
};
var RadialSpinner_svelte_svelte_type_style_lang = ".spinner.svelte-135b93{animation:svelte-135b93-spin 1s ease-in-out infinite;-webkit-animation:svelte-135b93-spin 1s ease-in-out infinite;border-radius:50%;display:inline-block}@keyframes svelte-135b93-spin{to{-webkit-transform:rotate(1turn)}}@-webkit-keyframes svelte-135b93-spin{to{-webkit-transform:rotate(1turn)}}";
const css = {
  code: ".spinner.svelte-135b93{animation:svelte-135b93-spin 1s ease-in-out infinite;-webkit-animation:svelte-135b93-spin 1s ease-in-out infinite;border-radius:50%;display:inline-block}@keyframes svelte-135b93-spin{to{-webkit-transform:rotate(1turn)}}@-webkit-keyframes svelte-135b93-spin{to{-webkit-transform:rotate(1turn)}}",
  map: '{"version":3,"file":"RadialSpinner.svelte","sources":["RadialSpinner.svelte"],"sourcesContent":["<script>\\n  export let size = 30;\\n  export let color = \\"#fff\\";\\n\\n  // Let\'s prepare our style variable\\n  let style =\\n    // Border styles and colors\\n    `border: ${size/6}px solid ${color};` +\\n    `border-top-color: transparent;` +\\n    \\n    // Spinner\'s width and height\\n    `width: ${size}px;` +\\n    `height: ${size}px`;\\n<\/script>\\n\\n<div style=\\"{style}\\" class=\\"spinner\\">\\n</div>\\n\\n<style>.spinner{animation:spin 1s ease-in-out infinite;-webkit-animation:spin 1s ease-in-out infinite;border-radius:50%;display:inline-block}@keyframes spin{to{-webkit-transform:rotate(1turn)}}@-webkit-keyframes spin{to{-webkit-transform:rotate(1turn)}}</style>"],"names":[],"mappings":"AAkBO,sBAAQ,CAAC,UAAU,kBAAI,CAAC,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,kBAAkB,kBAAI,CAAC,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,GAAG,CAAC,QAAQ,YAAY,CAAC,WAAW,kBAAI,CAAC,EAAE,CAAC,kBAAkB,OAAO,KAAK,CAAC,CAAC,CAAC,mBAAmB,kBAAI,CAAC,EAAE,CAAC,kBAAkB,OAAO,KAAK,CAAC,CAAC,CAAC"}'
};
const RadialSpinner = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { size = 30 } = $$props;
  let { color = "#fff" } = $$props;
  let style = `border: ${size / 6}px solid ${color};border-top-color: transparent;width: ${size}px;height: ${size}px`;
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.color === void 0 && $$bindings.color && color !== void 0)
    $$bindings.color(color);
  $$result.css.add(css);
  return `<div${add_attribute("style", style, 0)} class="${"spinner svelte-135b93"}"></div>`;
});
const COLS = 6;
function makeid(length) {
  var result = "";
  var characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
  var charactersLength = characters.length;
  for (var i = 0; i < length; i++) {
    result += characters.charAt(Math.floor(Math.random() * charactersLength));
  }
  return result;
}
const DashboardTiles = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $ProjectDashboard, $$unsubscribe_ProjectDashboard;
  let $CurrentProject, $$unsubscribe_CurrentProject;
  let $$unsubscribe_page;
  $$unsubscribe_ProjectDashboard = subscribe(ProjectDashboard, (value) => $ProjectDashboard = value);
  $$unsubscribe_CurrentProject = subscribe(CurrentProject, (value) => $CurrentProject = value);
  $$unsubscribe_page = subscribe(page, (value) => value);
  var __awaiter = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  function syncWidgets() {
    return __awaiter(this, void 0, void 0, function* () {
      const serialized = gridItems.map((item) => {
        var _a, _b, _c, _d;
        return {
          type: item.type,
          enabled: true,
          x: (_a = item[COLS].x) !== null && _a !== void 0 ? _a : 0,
          y: (_b = item[COLS].y) !== null && _b !== void 0 ? _b : 0,
          width: (_c = item[COLS].w) !== null && _c !== void 0 ? _c : 2,
          height: (_d = item[COLS].h) !== null && _d !== void 0 ? _d : 2
        };
      });
      yield ProjectDashboard.updateLayout(String($ProjectDashboard._id), serialized);
    });
  }
  const unsubscribe = CurrentProject.subscribe(({ project }) => __awaiter(void 0, void 0, void 0, function* () {
    if (project._id) {
      yield ProjectDashboard.fetch(String($CurrentProject.project._id));
      const widgets = $ProjectDashboard.widgets.filter((widget) => widget.enabled).map((widget) => {
        return {
          [COLS]: gridHelp.item({
            x: widget.x,
            y: widget.y,
            w: widget.width,
            h: widget.height
          }),
          id: makeid(4),
          type: widget.type
        };
      });
      if ($ProjectDashboard.widgets.filter((widget) => widget.x == 0 && widget.y == 0).length == $ProjectDashboard.widgets.length) {
        gridItems = gridHelp.adjust(widgets, COLS);
        syncWidgets();
      } else {
        gridItems = widgets;
      }
      loading = false;
      unsubscribe();
    }
  }));
  let loading = true;
  let gridItems = [];
  let $$settled;
  let $$rendered;
  do {
    $$settled = true;
    $$rendered = `<section class="${"w-full h-1/2 relative mb-8"}">${loading ? `<div class="${"w-full h-full flex justify-center items-center"}">${validate_component(RadialSpinner, "RadialSpinner").$$render($$result, { color: "#000", size: 15 }, {}, {})}</div>` : `${gridItems.length > 0 ? `
      ${validate_component(Src, "Grid").$$render($$result, {
      rowHeight: 100,
      cols: [[, 6]],
      fillSpace: true,
      items: gridItems
    }, {
      items: ($$value) => {
        gridItems = $$value;
        $$settled = false;
      }
    }, {
      default: ({ item, dataItem }) => `<div class="${"w-full h-full bg-gray-200 rounded-sm"}">
          ${dataItem.type == "PLAYERS" ? `${validate_component(PlayersTile, "PlayersTile").$$render($$result, {}, {}, {})}
          ` : `${dataItem.type == "CONTROLS" ? `${validate_component(ControlsTile, "ControlsTile").$$render($$result, {}, {}, {})}
          ` : `${dataItem.type == "CONSOLE" ? `${validate_component(ConsoleTile, "ConsoleTile").$$render($$result, {}, {}, {})}` : ``}`}`}</div>`
    })}` : `<div class="${"w-full h-full flex justify-center items-center"}"><div class="${"w-1/3 p-4 bg-gray-100 rounded-sm text-center"}">
          <h1 class="${"text-xl text-black front-medium"}">\u041F\u0443\u0441\u0442\u043E</h1>

          
          <p class="${"text-sm text-black opacity-80 mt-1.5"}">Lorem ipsum dolor sit amet consectetur adipisicing elit. Numquam nobis at nulla sed harum quaerat!</p>

          
          <button class="${"w-full bg-black mt-6 py-2 px-4 flex items-center justify-start"}">${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
      name: "external-link",
      attrs: {
        class: "w-4 h-4 text-white",
        "stroke-width": "2.5"
      }
    }, {}, {})}

            <p class="${"text-sm text-white ml-1.5"}">\u041E\u0442\u043A\u0440\u044B\u0442\u044C \u043D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438 \u0432\u0438\u0434\u0436\u0435\u0442\u043E\u0432</p></button></div></div>`}`}</section>`;
  } while (!$$settled);
  $$unsubscribe_ProjectDashboard();
  $$unsubscribe_CurrentProject();
  $$unsubscribe_page();
  return $$rendered;
});
const InputSettingCard = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  var _a, _b;
  var __awaiter = function(thisArg, _arguments, P, generator) {
    function adopt(value2) {
      return value2 instanceof P ? value2 : new P(function(resolve) {
        resolve(value2);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value2) {
        try {
          step(generator.next(value2));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value2) {
        try {
          step(generator["throw"](value2));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  let value;
  onMount(() => __awaiter(void 0, void 0, void 0, function* () {
    value = yield card.getter();
  }));
  let { card = {} } = $$props;
  if ($$props.card === void 0 && $$bindings.card && card !== void 0)
    $$bindings.card(card);
  return `
<div class="${"w-" + escape((_a = card.size) != null ? _a : "1/3") + " relative p-2"}"><div class="${"bg-gray-100 p-4 w-full h-full"}">
    <div class="${"w-full flex items-center justify-between"}"><div class="${"flex items-center"}">
        <div style="${"background: " + escape(card.color)}" class="${"p-2 rounded-full flex items-center justify-center"}">${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: card.icon,
    attrs: {
      class: "w-4 h-4 text-white",
      "stroke-width": "2.5"
    }
  }, {}, {})}</div>
  
        
        <div class="${"ml-2 flex items-center"}"><p class="${"text-md text-black font-medium"}">${escape(card.title)}</p>
  
          ${card.documentationLink ? `<button>${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: "external-link",
    attrs: {
      class: "ml-1.5 w-3 h-3 text-black",
      "stroke-width": "2.5"
    }
  }, {}, {})}</button>` : ``}</div></div>

      
      ${``}</div>

    
    <div class="${"my-2"}"><p class="${"text-sm text-black opacity-80"}">${escape(card.description)}</p></div>

    
    <div class="${"w-full mt-4 bg-gray-200 rounded-md flex items-center relative"}">
      ${card.placeholder != null && card.placeholder.side == "left" ? `
        <div class="${"w-1/3 bg-gray-300 text-center py-1 rounded-l-md"}"><p class="${"text-sm text-black opacity-80"}">${escape(card.placeholder.text)}</p></div>` : ``}

      
      <input type="${"text"}" class="${"w-2/3 bg-gray-200 text-sm text-black px-2"}"${add_attribute("placeholder", (_b = card.textPlaceholder) != null ? _b : "\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435", 0)}${add_attribute("value", value, 1)}>

      
      ${card.placeholder != null && card.placeholder.side == "right" ? `
        <div class="${"w-1/3 bg-gray-300 text-center py-1 rounded-r-md"}"><p class="${"text-sm text-black opacity-80"}">${escape(card.placeholder.text)}</p></div>` : ``}</div>

    
    ${card.footerText ? `<p class="${"mt-1.5 text-xs text-black opacity-80"}"><!-- HTML_TAG_START -->${card.footerText}<!-- HTML_TAG_END --></p>` : ``}</div></div>`;
});
const TogglerSettingCard = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  var _a;
  var __awaiter = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  let toggled;
  onMount(() => __awaiter(void 0, void 0, void 0, function* () {
    console.log(card.getter);
    toggled = yield card.getter();
  }));
  let { card } = $$props;
  if ($$props.card === void 0 && $$bindings.card && card !== void 0)
    $$bindings.card(card);
  return `<div class="${"w-" + escape((_a = card.size) != null ? _a : "1/3") + " relative p-2"}"><div class="${"bg-gray-100 p-4 w-full h-full"}">
    <div class="${"w-full flex items-center justify-between"}">
      <div class="${"flex items-center"}">
        <div style="${"background: " + escape(card.color)}" class="${"p-2 rounded-full flex items-center justify-center"}">${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: card.icon,
    attrs: {
      class: "w-4 h-4 text-white",
      "stroke-width": "2.5"
    }
  }, {}, {})}</div>

        
        <div class="${"ml-2 flex items-center"}"><p class="${"text-md text-black font-medium"}">${escape(card.title)}</p>

          
          ${card.documentationLink ? `<button>${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: "external-link",
    attrs: {
      class: "ml-1.5 w-3 h-3 text-black",
      "stroke-width": "2.5"
    }
  }, {}, {})}</button>` : ``}</div></div>

      
      ${toggled == null ? `
        ${validate_component(RadialSpinner, "RadialSpinner").$$render($$result, { color: "#000", size: 16 }, {}, {})}` : `${toggled ? `
          <button class="${"rounded-full p-0.5 bg-indigo-500 w-10 flex justify-end"}"><div class="${"w-4 h-4 rounded-full bg-white shadow-sm"}"></div></button>` : `
          <button class="${"rounded-full p-0.5 bg-gray-300 w-10"}"><div class="${"w-4 h-4 rounded-full bg-white shadow-sm"}"></div></button>`}`}</div>

    
    <div class="${"my-2"}"><p class="${"text-sm text-black opacity-80"}">${escape(card.description)}</p></div></div></div>`;
});
const UniversalSettingCard = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { card } = $$props;
  if ($$props.card === void 0 && $$bindings.card && card !== void 0)
    $$bindings.card(card);
  return `
${(card == null ? void 0 : card.type) == ESettingCardType.TOGGLER ? `${validate_component(TogglerSettingCard, "TogglerSettingCard").$$render($$result, { card }, {}, {})}` : `${(card == null ? void 0 : card.type) == ESettingCardType.INPUT ? `${validate_component(InputSettingCard, "InputSettingCard").$$render($$result, { card }, {}, {})}` : ``}`}`;
});
const Routes = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `
<section class="${"w-full h-screen bg-gray-100 flex items-center justify-between relative px-6 md:px-12"}">
  <div class="${"w-full md:w-2/4"}"><h1 class="${"text-6xl text-black font-medium"}">\u0411\u0435\u0441\u043F\u043B\u0430\u0442\u043D\u044B\u0439 <span class="${"border-b-4 border-yellow-300"}">\u0412\u0438\u0437\u0443\u0430\u043B\u044C\u043D\u044B\u0439 \u042F\u0437\u044B\u043A</span> \u0438 <span class="${"border-b-4 border-yellow-300"}">\u0425\u043E\u0441\u0442\u0438\u043D\u0433</span> \u0434\u043B\u044F \u041C\u0430\u0439\u043D\u043A\u0440\u0430\u0444\u0442\u0430.</h1></div>

  
  <div class="${"absolute inset-x-0 bottom-0 w-full flex items-center justify-between px-6 py-4 bg-gray-200"}">
    <div class="${"flex items-center opacity-90"}">
      <div class="${"mr-2 flex items-center"}">
        <img src="${"https://res.cloudinary.com/lococovu-cdn/image/upload/v1636810372/bluk-studio-black.svg"}" alt="${"bluk.studio black logotype"}" class="${"mr-2 w-6 h-6"}">

        <h1 class="${"text-xl text-black font-bold"}">bluk</h1></div>

      
      <a href="${"#"}" class="${"text-black text-sm mx-4"}">\u0414\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0430\u0446\u0438\u044F</a>
      <a href="${"#"}" class="${"text-black text-sm mx-4"}">\u041F\u043B\u0430\u0433\u0438\u043D\u044B</a>
    
      
      <button class="${"flex items-center mx-4"}">${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: "external-link",
    attrs: {
      class: "w-4 h-4 text-black",
      "stroke-width": "2.5"
    }
  }, {}, {})}
        
        <p class="${"text-black text-sm ml-1.5"}">\u0411\u043E\u043B\u044C\u0448\u0435</p></button></div>

    
    <div class="${"flex items-center"}">
      <button class="${"px-6 py-1.5 bg-black border-2 border-black rounded-sm mx-4"}"><p class="${"text-white text-sm"}">\u0412\u043E\u0439\u0442\u0438</p></button>

      
      <button class="${"px-6 py-1.5 border-2 border-black rounded-sm"}"><p class="${"text-black text-sm"}">\u0423\u0437\u043D\u0430\u0442\u044C \u0431\u043E\u043B\u044C\u0448\u0435</p></button></div></div></section>`;
});
var index$7 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Routes
});
const Login = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $page, $$unsubscribe_page;
  $$unsubscribe_page = subscribe(page, (value) => $page = value);
  var __awaiter = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  onMount(() => __awaiter(void 0, void 0, void 0, function* () {
    const token = $page.query.get("token");
    if (!token) {
      const resourceId = "617a54db957b58a8819eafe9";
      goto(`https://cloud.odzi.dog/auth/v1/${resourceId}`);
    } else {
      CurrentProfile.authorize(token);
      CurrentProfile.subscribe((object) => {
        if (object.loggedIn)
          goto("/app");
      });
    }
  }));
  $$unsubscribe_page();
  return ``;
});
var index$6 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Login
});
const _layout$3 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $CurrentProfile, $$unsubscribe_CurrentProfile;
  let $page, $$unsubscribe_page;
  $$unsubscribe_CurrentProfile = subscribe(CurrentProfile, (value) => $CurrentProfile = value);
  $$unsubscribe_page = subscribe(page, (value) => $page = value);
  onMount(() => {
    CurrentProfile.fetchMe().then(() => {
      ProfileProjects.fetch();
    }).catch(() => {
      goto("/login");
    });
  });
  $$unsubscribe_CurrentProfile();
  $$unsubscribe_page();
  return `<main class="${"flex flex-col"}">${($CurrentProfile == null ? void 0 : $CurrentProfile.loggedIn) ? `
    ${$page.path.includes("editor") ? `${validate_component(EditorHeader, "EditorHeader").$$render($$result, {}, {}, {})}` : `${validate_component(ApplicationHeader, "ApplicationHeader").$$render($$result, {}, {}, {})}`}

    
    <div class="${"w-full h-screen relative overflow-y-auto pt-16"}">${slots.default ? slots.default({}) : ``}</div>` : `
    <div class="${"w-full h-screen flex items-center justify-center"}">${validate_component(RadialSpinner, "RadialSpinner").$$render($$result, { color: "#000", size: 15 }, {}, {})}</div>`}</main>`;
});
var __layout$3 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _layout$3
});
const App = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  onMount(() => {
    goto("/app/selector");
  });
  return ``;
});
var index$5 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": App
});
const Selector = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $ProfileProjects, $$unsubscribe_ProfileProjects;
  $$unsubscribe_ProfileProjects = subscribe(ProfileProjects, (value) => $ProfileProjects = value);
  onMount(() => {
    ProfileProjects.subscribe((object) => {
      var _a;
      if (object.loaded) {
        if (!((_a = object.list) === null || _a === void 0 ? void 0 : _a.length)) {
          goto("/app/create");
        } else {
          loaded = true;
        }
      }
    });
  });
  let loaded = false;
  $$unsubscribe_ProfileProjects();
  return `
<div class="${"w-full h-full"}">
  ${!loaded ? `<div class="${"w-full h-full flex justify-center items-center"}">${validate_component(RadialSpinner, "RadialSpinner").$$render($$result, { color: "#000", size: 15 }, {}, {})}</div>` : `
    <section class="${"w-full flex items-stretch justify-between mt-4 px-2"}">
      <div class="${"flex items-stretch"}">
        <div class="${"w-full relative bg-gray-200 rounded-sm px-2 py-2 flex items-center"}">${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: "search",
    attrs: {
      class: "w-4 h-4 text-black mr-2 opacity-40",
      "stroke-width": "2.5"
    }
  }, {}, {})}

          <input class="${"bg-gray-200"}" placeholder="${"\u041F\u043E\u0438\u0441\u043A..."}" type="${"text"}"></div></div>

      
      <div class="${"flex items-stretch"}">
        <button class="${"mx-2 px-4 cursor-not-allowed opacity-80 flex items-center justify-center border-2 border-black"}"><p class="${"text-black text-sm"}">\u041F\u0440\u0438\u043C\u0435\u043D\u0438\u0442\u044C \u043F\u0440\u0438\u0433\u043B\u0430\u0448\u0435\u043D\u0438\u0435</p></button>

        
        <button class="${"mx-2 px-4 flex items-center justify-center bg-black"}"><p class="${"text-white text-sm mr-2"}">\u0421\u043E\u0437\u0434\u0430\u0442\u044C \u0441\u0435\u0440\u0432\u0435\u0440</p>

          ${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: "layers",
    attrs: {
      class: "w-4 h-4 text-white",
      "stroke-width": "2.5"
    }
  }, {}, {})}</button></div></section>

    
    <section class="${"w-full h-auto mt-2 overflow-y-auto overflow-x-hidden flex flex-wrap items-stretch"}">${each($ProfileProjects.list, (project) => {
    var _a;
    return `
        <div class="${"w-1/6 bg-white border-4 border-gray-200 p-4 m-2"}">
          <div class="${"w-full flex items-center justify-between"}">
            <div class="${"w-10 h-10 rounded-sm bg-red-500"}"></div>

            
            <div class="${"p-3 rounded-full bg-gray-100"}">${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
      name: "settings",
      attrs: {
        class: "w-4 h-4 text-black",
        "stroke-width": "2.5"
      }
    }, {}, {})}
            </div></div>

          
          <div class="${"my-4"}"><h1 class="${"text-md text-black font-medium"}">${escape(project.name)}</h1>
            <p class="${"text-xs text-black opacity-80"}">${escape((_a = project.description) != null ? _a : "\u041E\u043F\u0438\u0441\u0430\u043D\u0438\u0435 \u043E\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442...")}</p></div>

          
          <div class="${"w-full"}"><button class="${"px-2 py-1 border-2 border-black flex items-center justify-center"}"><p class="${"text-black text-xs mr-0.5"}">\u0412\u044B\u0431\u0440\u0430\u0442\u044C</p>

              ${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
      name: "chevron-right",
      attrs: {
        class: "w-4 h-4 text-black",
        "stroke-width": "2.5"
      }
    }, {}, {})}
            </button></div>
        </div>`;
  })}

      </section>`}</div>`;
});
var index$4 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Selector
});
const _layout$2 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let loaded = false;
  let currentPage = {};
  page.subscribe((page2) => {
    const pathSplitted = page2.path.split("/");
    if (pathSplitted[pathSplitted.length - 1] != "create") {
      setTimeout(() => loaded = true, 250);
      if ((currentPage === null || currentPage === void 0 ? void 0 : currentPage.id) != pathSplitted[pathSplitted.length - 1]) {
        loaded = false;
        setTimeout(() => loaded = true, 250);
      }
      currentPage = CreateProjectPages.filter((x) => x.id == pathSplitted[pathSplitted.length - 1])[0];
    } else {
      goto("/app/create/plan", { replaceState: true });
    }
  });
  return `<div class="${"w-full h-full flex flex-col items-center py-12 justify-center bg-gradient-to-tr from-gray-900 to-black"}"><div class="${"w-1/3 relative overflow-y-auto overflow-x-hidden"}">
    <div class="${"w-full bg-white rounded-sm py-6 flex flex-col items-center justify-center"}">
      <div class="${"w-full ml-3 text-left px-6 relative"}">${(currentPage == null ? void 0 : currentPage.title) && (currentPage == null ? void 0 : currentPage.description) ? `<h1 class="${"text-xl text-black font-medium"}">${escape(currentPage == null ? void 0 : currentPage.title)}</h1>
          <p class="${"text-xs text-black opacity-80"}">${escape(currentPage == null ? void 0 : currentPage.description)}</p>` : `
          <div class="${"w-full h-8 rounded-full bg-gray-200"}"></div>
          <div class="${"w-1/2 flex mt-2"}"><div class="${"w-2/3 h-6 rounded-full bg-gray-200"}"></div>
            <div class="${"w-1/3 h-6 rounded-full bg-gray-200"}"></div></div>`}</div>

      
      <div class="${"w-full my-6"}">${!loaded ? `<div class="${"py-16 w-full flex justify-center"}">${validate_component(RadialSpinner, "RadialSpinner").$$render($$result, { color: "#000", size: 20 }, {}, {})}</div>` : `${slots.default ? slots.default({}) : ``}`}</div>

      
      <div class="${"w-full flex items-center justify-center"}">${loaded ? `${each(CreateProjectPages, (page2) => `${page2.id == (currentPage == null ? void 0 : currentPage.id) ? `<div class="${"w-4 h-4 rounded-full bg-black mx-2"}"></div>` : `<div class="${"w-4 h-4 cursor-pointer rounded-full border-2 border-black mx-2"}"></div>`}`)}` : `
          <div class="${"w-4 h-4 rounded-full bg-gray-200 mx-2"}"></div>
          <div class="${"w-4 h-4 rounded-full bg-gray-200 mx-2"}"></div>
          <div class="${"w-4 h-4 rounded-full bg-gray-200 mx-2"}"></div>`}</div></div></div></div>`;
});
var __layout$2 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _layout$2
});
const Create = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return ``;
});
var index$3 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Create
});
const Information = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $CreateProjectStore, $$unsubscribe_CreateProjectStore;
  $$unsubscribe_CreateProjectStore = subscribe(CreateProjectStore, (value) => $CreateProjectStore = value);
  let name = $CreateProjectStore.name;
  let description = $CreateProjectStore.description;
  let nameProperty = NamedProjectProperties.find((x) => x.id == "name");
  let descriptionProperty = NamedProjectProperties.find((x) => x.id == "description");
  $$unsubscribe_CreateProjectStore();
  return `
<div class="${"px-4"}">
  <div class="${"w-full"}">
    <div class="${"flex items-start mb-4"}">
      <div class="${"p-2 rounded-full bg-yellow-400"}">${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: nameProperty == null ? void 0 : nameProperty.icon,
    attrs: {
      class: "w-4 h-4 text-white",
      "stroke-width": "2.5"
    }
  }, {}, {})}</div>

      
      <div class="${"ml-2"}"><h1 class="${"text-md text-black"}">${escape(nameProperty == null ? void 0 : nameProperty.title)}</h1>
        <p class="${"text-xs text-black opacity-80"}">${escape(nameProperty == null ? void 0 : nameProperty.description)}</p></div></div>

    
    <div class="${"w-full relative bg-gray-200 rounded-sm px-2 py-2"}"><input class="${"bg-gray-200"}" placeholder="${"\u041D\u0430\u0437\u0432\u0430\u043D\u0438\u0435"}" type="${"text"}"${add_attribute("value", name, 1)}></div></div>

  
  <div class="${"w-full mt-6"}">
    <div class="${"flex items-start mb-4"}">
      <div class="${"p-2 rounded-full bg-indigo-400"}">${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: descriptionProperty == null ? void 0 : descriptionProperty.icon,
    attrs: {
      class: "w-4 h-4 text-white",
      "stroke-width": "2.5"
    }
  }, {}, {})}</div>

      
      <div class="${"ml-2"}"><h1 class="${"text-md text-black"}">${escape(descriptionProperty == null ? void 0 : descriptionProperty.title)}</h1>
        <p class="${"text-xs text-black opacity-80"}">${escape(descriptionProperty == null ? void 0 : descriptionProperty.description)}</p></div></div>

    
    <div class="${"w-full relative bg-gray-200 rounded-sm px-2 py-2"}"><textarea class="${"bg-gray-200 w-full"}" placeholder="${"\u041E\u043F\u0438\u0441\u0430\u043D\u0438\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430"}" rows="${"3"}">${description || ""}</textarea></div></div>

  
  <div class="${"w-full mt-8 flex items-start justify-center"}">
    <button class="${"w-1/2 mr-2 px-2 py-1 border-2 border-black flex items-center justify-center"}">${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: "chevron-left",
    attrs: {
      class: "w-4 h-4 text-black",
      "stroke-width": "2.5"
    }
  }, {}, {})}

      <p class="${"text-black text-sm ml-2"}">\u0412\u0435\u0440\u043D\u0443\u0442\u044C\u0441\u044F</p></button>

    
    <div class="${"w-1/2 mr-2 relative"}"><button class="${escape(!name ? "cursor-not-allowed opacity-80" : "") + " w-full px-2 py-1.5 bg-black rounded-sm flex items-center justify-center"}"><p class="${"text-white text-sm mr-2"}">\u041F\u0440\u043E\u0434\u043E\u043B\u0436\u0438\u0442\u044C</p>

        ${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: "chevron-right",
    attrs: {
      class: "w-4 h-4 text-white",
      "stroke-width": "2.5"
    }
  }, {}, {})}</button>
    
      
      ${!name ? `<p class="${"text-xs text-black opacity-80 mt-0.5"}">\u0417\u0430\u043F\u043E\u043B\u043D\u0438\u0442\u0435 <span class="${"border-b-2 border-black border-opacity-80"}">\u041D\u0430\u0437\u0432\u0430\u043D\u0438\u0435</span> \u0441\u0435\u0440\u0432\u0435\u0440\u0430</p>` : ``}</div></div></div>`;
});
var information = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Information
});
const Members = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return ``;
});
var members = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Members
});
const Finish = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let plan2;
  let $CreateProjectStore, $$unsubscribe_CreateProjectStore;
  $$unsubscribe_CreateProjectStore = subscribe(CreateProjectStore, (value) => $CreateProjectStore = value);
  (function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  });
  plan2 = ProjectPlans.filter((x) => x.id == $CreateProjectStore.plan)[0];
  $$unsubscribe_CreateProjectStore();
  return `
<div class="${"w-full flex flex-wrap px-4 relative items-stretch"}">${each(NamedProjectProperties, (property) => `<div class="${"w-full p-4 bg-gray-100 rounded-sm m-2 relative"}">
      ${``}

      <div class="${"flex items-center"}">
        ${property.icon ? `${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: property.icon,
    attrs: {
      class: "w-4 h-4 text-black mr-2",
      "stroke-width": "2.5"
    }
  }, {}, {})}` : ``}

        
        <h1 class="${"text-black text-md font-medium"}">${escape(property.title)}</h1>

        
        ${!$CreateProjectStore[property.id] ? `${property.required ? `<div class="${"ml-2 px-1.5 py-0.5 rounded-full bg-red-500 flex items-center"}">${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: "alert-triangle",
    attrs: {
      class: "w-3 h-3 text-white",
      "stroke-width": "2"
    }
  }, {}, {})}
          
              <p class="${"text-xs text-white ml-0.5"}">\u041E\u0431\u044F\u0437\u0430\u0442\u0435\u043B\u044C\u043D\u043E</p>
            </div>` : `<div class="${"ml-2 px-1.5 py-0.5 rounded-full bg-yellow-500 flex items-center"}"><p class="${"text-xs text-white ml-0.5"}">\u041D\u0435\u043E\u0431\u044F\u0437\u0430\u0442\u0435\u043B\u044C\u043D\u043E</p>
            </div>`}` : ``}</div>  

      
      <p class="${"text-sm text-black opacity-80"}">${escape(property.description)}</p>

      
      <div class="${"w-full mt-4"}">${$CreateProjectStore[property.id] ? `
          ${property.id == "plan" ? `<div class="${"w-full bg-white border-2 border-yellow-400 flex items-start rounded-sm px-2 py-4"}">
              <div style="${"background: " + escape(plan2.color)}" class="${"p-3 rounded-full flex items-center justify-center"}">${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: plan2.icon,
    attrs: {
      class: "w-4 h-4 text-white",
      "stroke-width": "2.5"
    }
  }, {}, {})}</div>
          
              
              <div class="${"ml-4"}">
                <h1 class="${"text-md text-black font-medium"}">${escape(plan2.title)}</h1>
          
                
                <p class="${"text-xs text-black opacity-80"}"><!-- HTML_TAG_START -->${plan2.description}<!-- HTML_TAG_END --></p>

                
                <div class="${"flex items-stretch mt-2"}">
                  <div class="${"px-2 py-1 bg-black rounded-sm flex items-center mr-3"}">
                    ${plan2.price == 0 ? `<p class="${"text-xs text-white"}">\u0411\u0435\u0441\u043F\u043B\u0430\u0442\u043D\u043E</p>` : ``}</div>

                  
                  <button class="${"px-2 py-1 border-2 border-black"}"><p class="${"text-black text-xs"}">\u0412\u044B\u0431\u0440\u0430\u0442\u044C \u0434\u0440\u0443\u0433\u043E\u0439</p>
                  </button></div>
              </div></div>
          ` : `${property.id == "name" || property.id == "description" ? `<div class="${"bg-white px-4 py-2 rounded-sm border-2 border-yellow-400 flex items-start justify-between"}"><h1 class="${"text-md text-black"}">${escape($CreateProjectStore[property.id])}</h1>

              
              <button class="${"py-1"}">${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: "edit",
    attrs: {
      class: "w-4 h-4 text-black",
      "stroke-width": "2.5"
    }
  }, {}, {})}</button>
            </div>` : ``}`}` : `<div class="${"px-4 py-1.5 rounded-sm " + escape(property.required ? "bg-red-500" : "bg-yellow-500")}"><h1 class="${"text-white text-sm"}">\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043D\u0435 \u0437\u0430\u0434\u0430\u043D\u043E</h1>

            ${property.pageId ? `<p class="${"text-xs text-white opacity-80"}">\u0412\u044B \u043C\u043E\u0436\u0435\u0442\u0435 \u0437\u0430\u0434\u0430\u0442\u044C \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u044D\u0442\u043E\u043C\u0443 \u043F\u0443\u043D\u043A\u0442\u0443 \u043F\u043B\u0430\u043D\u0430, \u043D\u0430\u0436\u0430\u0432 \u043D\u0430 \u043A\u043D\u043E\u043F\u043A\u0443 \u043D\u0438\u0436\u0435:</p>

              <button class="${"mt-1 px-2 py-1 rounded-sm bg-black"}"><p class="${"text-xs text-white"}">\u041F\u0435\u0440\u0435\u0439\u0442\u0438</p>
              </button>` : ``}
          </div>`}</div>
    </div>`)}

  
  <div class="${"w-full mt-8 px-2"}"><button class="${"w-full px-2 py-1.5 bg-black rounded-sm flex items-center justify-center"}">${`<p class="${"text-white text-sm mr-2"}">\u0421\u043E\u0437\u0434\u0430\u0442\u044C \u0441\u0435\u0440\u0432\u0435\u0440</p>

        ${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: "chevron-right",
    attrs: {
      class: "w-4 h-4 text-white",
      "stroke-width": "2.5"
    }
  }, {}, {})}`}</button></div></div>`;
});
var finish = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Finish
});
const Plan = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $CreateProjectStore, $$unsubscribe_CreateProjectStore;
  $$unsubscribe_CreateProjectStore = subscribe(CreateProjectStore, (value) => $CreateProjectStore = value);
  $$unsubscribe_CreateProjectStore();
  return `
${each(ProjectPlans, (plan2) => `<div class="${"w-full border-2 " + escape($CreateProjectStore.plan == plan2.id ? "border-yellow-400" : "border-gray-200") + " flex items-start rounded-sm px-6 py-4"}">
    <div style="${"background: " + escape(plan2.color)}" class="${"p-3 rounded-full flex items-center justify-center"}">${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: plan2.icon,
    attrs: {
      class: "w-4 h-4 text-white",
      "stroke-width": "2.5"
    }
  }, {}, {})}</div>

    
    <div class="${"ml-4"}">
      <div class="${"flex items-center mb-1.5"}"><h1 class="${"text-md text-black font-medium"}">${escape(plan2.title)}</h1>

        
        ${plan2.price == 0 ? `<div class="${"ml-2 rounded-full bg-black px-2 py-1"}"><p class="${"text-xs text-white"}">\u0411\u0435\u0441\u043F\u043B\u0430\u0442\u043D\u043E</p>
          </div>` : ``}</div>

      
      <p class="${"text-xs text-black opacity-80 mb-4"}"><!-- HTML_TAG_START -->${plan2.description}<!-- HTML_TAG_END --></p>
    
      
      <div class="${"flex items-stretch"}">
        ${$CreateProjectStore.plan == plan2.id ? `<button class="${"px-2 py-1 bg-black rounded-sm flex items-center mr-3"}">${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: "check",
    attrs: {
      class: "w-3 h-3 text-white",
      "stroke-width": "2.5"
    }
  }, {}, {})}

            <p class="${"text-white text-xs ml-1.5"}">\u0412\u044B\u0431\u0440\u0430\u043D\u043D\u043E</p>
          </button>` : `<button class="${"px-2 py-1 border-2 border-black rounded-sm flex items-center mr-3"}"><p class="${"text-black text-xs mr-1.5"}">\u0412\u044B\u0431\u0440\u0430\u0442\u044C</p>

            ${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: "chevron-right",
    attrs: {
      class: "w-3 h-3 text-black",
      "stroke-width": "2.5"
    }
  }, {}, {})}
          </button>`}

        
        <button class="${"px-2 py-1 border-2 border-black"}"><p class="${"text-black text-xs"}">\u0423\u0437\u043D\u0430\u0442\u044C \u0431\u043E\u043B\u044C\u0448\u0435</p></button>
      </div></div>
  </div>`)}


<div class="${"w-full border-2 flex items-start border-gray-200 rounded-sm px-6 py-4"}">
  <div class="${"p-3 rounded-full bg-indigo-400 flex items-center justify-center"}">${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: "heart",
    attrs: {
      class: "w-4 h-4 text-white",
      "stroke-width": "2.5"
    }
  }, {}, {})}</div>

  
  <div class="${"ml-4"}">
    <div class="${"flex items-center mb-1.5"}"><h1 class="${"text-md text-black font-medium"}">\u0411\u043E\u043B\u044C\u0448\u0435 \u043F\u043B\u0430\u043D\u043E\u0432 \u043D\u0435\u0442</h1></div>

    
    <p class="${"text-xs text-black opacity-80 mb-4"}">\u0414\u0430-\u0434\u0430, \u0432\u044B \u0432\u0441\u0451 \u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u043E \u043F\u043E\u043D\u044F\u043B\u0438! \u0421\u0435\u0440\u0432\u0438\u0441 \u043F\u043E\u043B\u043D\u043E\u0441\u0442\u044C\u044E \u0431\u0435\u0441\u043F\u043B\u0430\u0442\u0435\u043D \u0438 \u043F\u043E\u0447\u0442\u0438 \u0447\u0442\u043E \u043D\u0435\u043E\u0433\u0440\u0430\u043D\u0438\u0447\u0435\u043D.</p>
  
    
    <div class="${"flex items-stretch"}">
      <button class="${"px-2 py-1 border-2 border-black"}"><p class="${"text-black text-xs"}">\u041F\u043E\u0434\u0434\u0435\u0440\u0436\u0430\u0442\u044C \u043F\u0440\u043E\u0435\u043A\u0442</p></button></div></div></div>`;
});
var plan = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Plan
});
const _layout$1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let loaded;
  let $page, $$unsubscribe_page;
  let $CurrentProject, $$unsubscribe_CurrentProject;
  let $CurrentWorkerState, $$unsubscribe_CurrentWorkerState;
  $$unsubscribe_page = subscribe(page, (value) => $page = value);
  $$unsubscribe_CurrentProject = subscribe(CurrentProject, (value) => $CurrentProject = value);
  $$unsubscribe_CurrentWorkerState = subscribe(CurrentWorkerState, (value) => $CurrentWorkerState = value);
  onMount(() => {
    CurrentProject.fetch($page.params.projectId);
    CurrentProject.subscribe((store) => {
      if (store.loaded) {
        console.log("loaded");
        console.log(store);
        CurrentWorkerState.fetch($page.params.projectId);
      }
    });
  });
  page.subscribe((object) => {
    const regexp = /\/app\/[\s\S]{24}\/[\s\S]+/;
    if (!regexp.test(object.path)) {
      CurrentProject.clear();
    }
  });
  loaded = $CurrentProject.loaded;
  $$unsubscribe_page();
  $$unsubscribe_CurrentProject();
  $$unsubscribe_CurrentWorkerState();
  return `
${!loaded ? `<div class="${"w-full h-full flex items-center justify-center"}">${validate_component(RadialSpinner, "RadialSpinner").$$render($$result, { color: "#000", size: 15 }, {}, {})}</div>` : `
  ${($CurrentWorkerState == null ? void 0 : $CurrentWorkerState.state) != "RUNNING" ? `<div class="${"w-full h-full flex flex-col items-center justify-center"}">${validate_component(RadialSpinner, "RadialSpinner").$$render($$result, { color: "#000", size: 15 }, {}, {})}

      
      <div class="${"text-center mt-4 w-1/3"}"><h1 class="${"text-md font-medium text-black"}">\u0417\u0430\u043F\u0443\u0441\u043A\u0430\u0435\u043C \u0441\u0435\u0440\u0432\u0435\u0440...</h1>
        <p class="${"text-sm text-black opacity-80"}">State: ${escape($CurrentWorkerState == null ? void 0 : $CurrentWorkerState.state)} Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus maiores sunt numquam assumenda enim facere.</p></div></div>` : `${slots.default ? slots.default({}) : ``}`}`}`;
});
var __layout$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _layout$1
});
const U5BprojectIdu5D = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $page, $$unsubscribe_page;
  $$unsubscribe_page = subscribe(page, (value) => $page = value);
  onMount(() => goto(`${$page.path}/dashboard`, { replaceState: true }));
  $$unsubscribe_page();
  return ``;
});
var index$2 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": U5BprojectIdu5D
});
const Dashboard = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  var _a;
  let project;
  let $CurrentProject, $$unsubscribe_CurrentProject;
  let $$unsubscribe_page;
  $$unsubscribe_CurrentProject = subscribe(CurrentProject, (value) => $CurrentProject = value);
  $$unsubscribe_page = subscribe(page, (value) => value);
  project = $CurrentProject.project;
  $$unsubscribe_CurrentProject();
  $$unsubscribe_page();
  return `
<section class="${"w-full bg-gray-200 px-2 py-4"}">
  <div class="${"w-full flex items-center justify-between pb-8"}">
    <div><h1 class="${"text-xl text-black font-medium"}">\u0418\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F</h1>
      <p class="${"text-xs text-black opacity-80"}">\u0413\u043B\u0430\u0432\u043D\u0430\u044F \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F \u043E \u0441\u0435\u0440\u0432\u0435\u0440\u0435</p></div>

    
    </div>

  
  <div>
    <div class="${"px-2 flex items-start"}">
      <div class="${"w-10 h-10 rounded-sm bg-red-500"}"></div>

      
      <div class="${"ml-2"}"><h1 class="${"text-2xl text-black font-medium"}">${escape(project.name)}</h1>
        <p class="${"text-sm text-black opacity-80"}">${escape((_a = project.description) != null ? _a : "")}</p></div></div>

    
    <div class="${"w-full flex items-center mt-4"}">
      <div class="${"mx-1 flex items-center justify-center rounded-full bg-white px-3 py-1"}">${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: "globe",
    attrs: {
      class: "w-4 h-4 text-black",
      "stroke-width": "2.5"
    }
  }, {}, {})}

        <p class="${"text-sm text-black ml-1.5"}">paradise.bluk.studio</p></div>

      
      <div class="${"mx-1 relative flex items-center justify-center rounded-full bg-white px-3 py-1"}"><div class="${"relative flex items-center mr-1.5"}">
          <div class="${"w-4 h-4 relative"}"><img src="${"https://crafatar.com/avatars/1b42ff62-b4cb-4b8e-8fbd-efd24e70ced2"}" alt="${""}" class="${"absolute w-4 h-4 rounded-sm"}"></div>

          <div class="${"w-4 h-4 relative"}"><img src="${"https://crafatar.com/avatars/65fd84d5-5904-4391-b84a-ab52ffc0a7e9"}" alt="${""}" class="${"absolute w-4 h-4 rounded-sm"}"></div>

          <div class="${"w-4 h-4 relative"}"><img src="${"https://crafatar.com/avatars/f6199c41-2d00-40b0-9d58-c4fd069c852c"}" alt="${""}" class="${"absolute w-4 h-4 rounded-sm"}"></div></div>

        <p class="${"text-black text-sm"}">10 \u0438\u0433\u0440\u043E\u043A\u043E\u0432</p></div>

      
      <div class="${"mx-1 flex items-center justify-center rounded-full bg-white px-3 py-1"}"><div class="${"w-4 h-4 mr-1.5 rounded-full bg-green-500"}"></div>

        <p class="${"text-black text-sm"}">\u0412\u043A\u043B\u044E\u0447\u0451\u043D</p></div></div></div>

  
  <div style="${"height: 2px;"}" class="${"w-full bg-gray-300 my-4 mx-2"}"></div>

  <div class="${"flex items-stretch justify-between"}">
    <div class="${"flex items-stretch"}">${each(InfoFooterButtons, (button) => `<button class="${"mx-2 px-2 py-1.5 " + escape(button.isGhost ? "border-2 border-black text-black" : "text-white bg-black") + " flex items-center justfiy-center"}">${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: button.icon,
    attrs: { class: "w-4 h-4", "stroke-width": "2.5" }
  }, {}, {})}
          
          <p class="${"text-sm ml-1.5"}">${escape(button.title)}</p>
        </button>`)}</div>

    
    <div class="${"flex items-stretch"}">
      <button class="${"mx-2 px-2 py-1.5 bg-red-500 flex items-center justify-center"}">${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: "pause",
    attrs: {
      class: "w-4 h-4 text-white",
      "stroke-width": "2.5"
    }
  }, {}, {})}

        <p class="${"text-sm text-white ml-1.5"}">\u0412\u044B\u043A\u043B\u044E\u0447\u0438\u0442\u044C</p></button></div></div></section>


${validate_component(DashboardTiles, "DashboardTiles").$$render($$result, {}, {}, {})}`;
});
var dashboard = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Dashboard
});
const _layout = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $page, $$unsubscribe_page;
  $$unsubscribe_page = subscribe(page, (value) => $page = value);
  let currentCategoryId;
  page.subscribe(() => {
    const splittedPath = $page.path.split("/");
    currentCategoryId = splittedPath[splittedPath.length - 1];
  });
  $$unsubscribe_page();
  return `<section class="${"w-full h-full relative flex overflow-hidden"}">
  <div class="${"w-1/4 h-full px-2 pt-4"}">
    <button class="${"mb-2 w-full bg-black px-4 py-2 flex items-center justify-start"}">${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: "chevron-left",
    attrs: { class: "w-4 h-4 text-white" }
  }, {}, {})}

      <p class="${"ml-1.5 text-white text-sm"}">\u0412\u0435\u0440\u043D\u0443\u0442\u044C\u0441\u044F \u043D\u0430\u0437\u0430\u0434</p></button>

    ${each(SettingsCategories, (category) => `<button class="${"w-full px-4 py-2 my-1.5 flex items-center justify-start opacity-80 " + escape(category.id == currentCategoryId ? "bg-gray-100" : "")}">${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: category.icon,
    attrs: { class: "w-4 h-4 text-black" }
  }, {}, {})}
      
        <p class="${"text-sm text-black ml-2"}">${escape(category.title)}</p>
      </button>`)}</div>

  
  <div class="${"w-3/4 py-2 overflow-y-auto"}">${slots.default ? slots.default({}) : ``}</div></section>`;
});
var __layout = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _layout
});
const Settings = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $page, $$unsubscribe_page;
  $$unsubscribe_page = subscribe(page, (value) => $page = value);
  onMount(() => goto(`${$page.path}/general`, { replaceState: true }));
  $$unsubscribe_page();
  return ``;
});
var index$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Settings
});
const General = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `
<section class="${"w-full flex flex-wrap items-stretch"}">${each(GeneralSettings, (setting) => `${validate_component(UniversalSettingCard, "UniversalSettingCard").$$render($$result, { card: setting }, {}, {})}`)}</section>`;
});
var general = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": General
});
const Danger = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$unsubscribe_CurrentProject;
  $$unsubscribe_CurrentProject = subscribe(CurrentProject, (value) => value);
  (function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  });
  $$unsubscribe_CurrentProject();
  return `
<section class="${"w-full flex flex-wrap items-stretch"}">
  

  
  <div class="${"w-1/2 relative p-2"}"><div class="${"bg-gray-100 p-4 w-full h-full"}">
      <div class="${"w-full flex items-center justify-between"}"><div class="${"flex items-center"}">
          <div class="${"p-2 bg-red-500 rounded-full flex items-center justify-center"}">${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: "alert-triangle",
    attrs: {
      class: "w-4 h-4 text-white",
      "stroke-width": "2.5"
    }
  }, {}, {})}</div>
    
          
          <div class="${"ml-2 flex items-center"}"><p class="${"text-md text-black font-medium"}">\u0423\u0434\u0430\u043B\u0438\u0442\u044C \u043F\u0440\u043E\u0435\u043A\u0442</p></div></div>

        
        ${``}</div>

      
      <div class="${"my-2"}"><p class="${"text-sm text-black opacity-80"}">Lorem ipsum dolor sit amet consectetur adipisicing elit. Laborum possimus nostrum inventore. Explicabo atque fugit commodi!</p></div>

      
      <div class="${"w-full mt-4 bg-gray-200 rounded-md flex items-center relative"}"><button class="${"w-full px-4 py-2 bg-red-500 flex items-center justify-start"}">${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: "check",
    attrs: { class: "w-4 h-4 text-white" }
  }, {}, {})}

          <p class="${"text-sm text-white font-medium ml-2"}">\u0423\u0434\u0430\u043B\u0438\u0442\u044C \u043F\u0440\u043E\u0435\u043A\u0442</p></button></div>

      
      <p class="${"mt-1.5 text-xs text-black opacity-80"}">Lorem ipsum dolor sit amet consectetur, adipisicing elit. Provident, a!</p></div></div></section>`;
});
var danger = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Danger
});
const Tiles = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $ProjectDashboard, $$unsubscribe_ProjectDashboard;
  let $CurrentProject, $$unsubscribe_CurrentProject;
  $$unsubscribe_ProjectDashboard = subscribe(ProjectDashboard, (value) => $ProjectDashboard = value);
  $$unsubscribe_CurrentProject = subscribe(CurrentProject, (value) => $CurrentProject = value);
  onMount(() => {
    var _a;
    if ($ProjectDashboard._id == null) {
      ProjectDashboard.fetch(String((_a = $CurrentProject === null || $CurrentProject === void 0 ? void 0 : $CurrentProject.project) === null || _a === void 0 ? void 0 : _a._id));
      ProjectDashboard.subscribe((dashboard2) => {
        if (dashboard2._id) {
          loading = false;
        }
      });
    } else {
      loading = false;
    }
  });
  const settings = [
    {
      title: "\u0418\u0433\u0440\u043E\u043A\u0438",
      description: "Lorem ipsum dolor sit amet consectetur, adipisicing elit. Doloremque aut cum repudiandae aspernatur quasi laudantium.",
      component: PlayersTile,
      settings: PlayersWidgetSettings
    },
    {
      title: "\u041A\u043E\u043D\u0441\u043E\u043B\u044C",
      description: "Lorem ipsum dolor sit amet consectetur, adipisicing elit. Doloremque aut cum repudiandae aspernatur quasi laudantium.",
      component: ConsoleTile,
      settings: ConsoleWidgetSettings
    },
    {
      title: "\u0423\u043F\u0440\u0430\u0432\u043B\u0435\u043D\u0438\u0435",
      description: "Lorem ipsum dolor sit amet consectetur, adipisicing elit. Doloremque aut cum repudiandae aspernatur quasi laudantium.",
      component: ControlsTile,
      settings: ControlsWidgetSettings
    },
    {
      title: "\u041B\u043E\u0433\u0438",
      description: "Lorem ipsum dolor sit amet consectetur, adipisicing elit. Doloremque aut cum repudiandae aspernatur quasi laudantium.",
      component: LogsTile,
      settings: LogsWidgetSettings
    }
  ];
  let loading = true;
  $$unsubscribe_ProjectDashboard();
  $$unsubscribe_CurrentProject();
  return `

${loading ? `<div class="${"w-full h-full flex justify-center items-center"}">${validate_component(RadialSpinner, "RadialSpinner").$$render($$result, { color: "#000", size: 15 }, {}, {})}</div>` : `${each(settings, (widget) => `
    <div class="${"w-2/3 px-2"}"><h1 class="${"text-2xl text-black font-medium"}">${escape(widget.title)}</h1>
      <p class="${"text-sm text-black opacity-80"}">${escape(widget.description)}</p></div>

    
    <section class="${"mt-4 w-full flex items-stretch relative"}">
      <div class="${"w-1/2 flex flex-wrap items-stretch"}">${each(widget.settings, (setting) => `${validate_component(UniversalSettingCard, "UniversalSettingCard").$$render($$result, { card: setting }, {}, {})}`)}</div>

      
      <div class="${"w-1/2 flex items-center justify-center relative opacity-90"}">
        <div class="${"absolute inset-x-0 top-0 w-full p-2 flex justify-end"}"><div class="${"bg-gray-100 px-4 py-1.5 flex items-center justify-center"}"><p class="${"text-sm text-black"}">\u041F\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043B\u044C\u043D\u044B\u0439 \u043F\u0440\u043E\u0441\u043C\u043E\u0442\u0440</p>

            <button class="${"ml-2"}">${validate_component(SimpleIcon, "SimpleIcon").$$render($$result, {
    name: "x",
    attrs: {
      class: "w-4 h-4 text-black",
      "stroke-width": "2.5"
    }
  }, {}, {})}</button>
          </div></div>

        
        <div class="${"bg-gray-200 rounded-md border-2 border-dotted border-indigo-500"}">${validate_component(widget.component || missing_component, "svelte:component").$$render($$result, {}, {}, {})}</div>
      </div></section>

    
    <div class="${"w-full flex justify-center px-2"}"><div class="${"my-8 w-full h-2 border-b-2 border-gray-200"}"></div>
    </div>`)}`}`;
});
var tiles = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Tiles
});
const Editor = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $page, $$unsubscribe_page;
  $$unsubscribe_page = subscribe(page, (value) => $page = value);
  onMount(() => goto(`${$page.path}/explorer`, { replaceState: true }));
  $$unsubscribe_page();
  return ``;
});
var index = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Editor
});
const Explorer = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<p>Editor Explorer</p>`;
});
var explorer = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Explorer
});
export { init, render };
